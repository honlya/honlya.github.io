<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://honlya.github.io</id>
    <title>Gridea</title>
    <updated>2022-08-01T02:03:08.503Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://honlya.github.io"/>
    <link rel="self" href="https://honlya.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://honlya.github.io/images/avatar.png</logo>
    <icon>https://honlya.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[维护学习内容]]></title>
        <id>https://honlya.github.io/post/wei-hu-xue-xi-nei-rong/</id>
        <link href="https://honlya.github.io/post/wei-hu-xue-xi-nei-rong/">
        </link>
        <updated>2022-08-01T02:02:29.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="日常">日常</h3>
<pre><code>--日常
-- 查看存储是否都为END 挂了就重新跑 (除了正式库，jmkx也要看一下)
select * from procctrl pl order by pl.laststarttime desc 
select * from v$db_object_cache where locks &gt; 0 and pins &gt; 0 and type='PROCEDURE';--查询正在跑的存储
select 'alter index '||index_name||' rebuild online;' from user_indexes where status='UNUSABLE';

-- 期间是否正常
select * from historyofsales hs where hs.POSTDATE&gt;=to_date('2021-02-01','yyyy-mm-dd')

--检查重名
select u.employeename from usr u where u.status = 41 group by u.employeename having count(1)&gt;1 

---18服务器 c盘 jmkx查看error日志
</code></pre>
<h3 id="统一门户">统一门户</h3>
<pre><code>--统一门户文件整体流程
select * from joblocktemplate--配置的模板
select * from ddidatafiledetail dd where dd.datatype = 'S' order by dd.createdate desc--DDI原始文件表头
select * from ddioriginalsalesdata ds where ds.datafiledetailid = 119190832 --DDI原始文件明细
--拆分后
select *  from salesdatafile 
select * from originalsalesdata os where os.salesdatafileid = 105227757

--- 查询文件 例如 销售
 select * from salesdatafile sa where sa.reffileid=115881514  --可根据filename查看
  select * from datafileactionlog da where da.datafiledetailid=115881514 --文件状态 ：21失败  50卸载  10刚入
  
-- 不反写之前数据 状态10改为80
--select * from orgcodecollate org where org.status=10 
update orgcodecollate org set org.status=80 where org.status=10

</code></pre>
<p>​	进销存 ：</p>
<p><strong>采购： purchase</strong></p>
<p><strong>销售：sales</strong></p>
<p><strong>库存：inventory</strong></p>
<p>select * from ddidatafiledetail dd where dd.datatype = 'P' order by dd.createdate desc--DDI原始文件表头<br>
select * from ddioriginalsalesdata ds where ds.datafiledetailid = 100219044 --DDI原始文件明细  销售<br>
select * from ddioriginalinventorydata ds where ds.datafiledetailid = 100219042 --DDI原始文件明细  库存<br>
select * from ddioriginalpurchasedata ds where ds.datafiledetailid = 100219044 --DDI原始文件明细   采购</p>
<p>日志：</p>
<pre><code> 
  select * from ddidatafileactionlog  -- 查看原始文件 日志
 
 select * from datafileactionlog da where da.datafiledetailid=115881514 --文件状态 ：21失败  50卸载  10刚入

</code></pre>
<p>其他 例如 18服务文件夹</p>
<p>SalesDataBakup，手工上载后的文件</p>
<p>DataFileListen  手工上载</p>
<p>AllFactionyDDIListen：原始文件</p>
<p>PRDDDIDateFileListen：拆分后文件，（注意是否卡文件） 拆分中的文件</p>
<p>DDIlog：拆分后生成到目录文件</p>
<p>门户页面：文件问题</p>
<p>数据清洗------快速通道-----药厂文件展示（经销商代码，药厂，然后搜索）</p>
<p>原始文件在ddiorg，，表中看，然后可以ddilog中error日志查看错误</p>
<h3 id="1trtte当月销售天数和历史平均销售天数和数量维护-月底">1.TRTTE当月销售天数和历史平均销售天数和数量维护 (月底)</h3>
<p>登录如下</p>
<p>地址：57.227</p>
<p>账号：dcchc</p>
<p>密码：Chc2cd80</p>
<p><strong>注意点：上月26日到本月25日为一月销量，具体看sql，时间修改</strong></p>
<pre><code>--TRTTE当月销售天数和历史平均销售天数和数量
 --修改对应日期  一般上个月26 号 到当月25 号  有两个特殊时间要注意

with aa as(
 select hs.sellercode,hs.sellername,count(1)/6 as 往前推6个月平均天数 from (select oz.orgcode as sellercode,oz.orgname as sellername,hs.salesdate from historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and hs.salesdate &gt;= to_date('2020-05-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-11-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname,hs.salesdate) hs group by hs.sellercode,hs.sellername
)
,bb as(
 select oz.orgcode as sellercode,oz.orgname as sellername,sum(hs.originalqty)/6 as 往前推6个月平均销量 from  historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and hs.salesdate &gt;= to_date('2020-05-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-11-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname
),cc as(
 select hs.sellercode,hs.sellername,count(1) as 当月26号到月底销售天数 from (select oz.orgcode as sellercode,oz.orgname as sellername,hs.salesdate from historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and  hs.salesdate &gt;= to_date('2020-11-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-11-30','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname,hs.salesdate) hs group by hs.sellercode,hs.sellername
),dd as(
 select hs.sellercode,hs.sellername,count(1) as 当月1到25号销售天数 from (select oz.orgcode as sellercode,oz.orgname as sellername,hs.salesdate from historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and  hs.salesdate &gt;= to_date('2020-12-01','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-12-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname,hs.salesdate) hs group by hs.sellercode,hs.sellername
),ee as(
 select oz.orgcode as sellercode,oz.orgname as sellername,sum(hs.originalqty) as 当月销售数量 from  historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and hs.salesdate &gt;= to_date('2020-11-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-12-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname
),ff as(
 select hs.sellercode,hs.sellername,count(1) as 当月销售天数 from (select oz.orgcode as sellercode,oz.orgname as sellername,hs.salesdate from historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and  hs.salesdate &gt;= to_date('2020-11-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-12-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname,hs.salesdate) hs group by hs.sellercode,hs.sellername
)

select aa.sellercode as 经销商代码,aa.sellername as 经销商名称,ff.当月销售天数,aa.往前推6个月平均天数,
--(aa.往前推6个月平均天数-cc.当月26号到月底销售天数-dd.当月1到25号销售天数)/(cc.当月26号到月底销售天数+dd.当月1到25号销售天数) as 销售天数差异占比1,
case when  nvl(aa.往前推6个月平均天数,0)=0 or  nvl(ff.当月销售天数,0)=0 then null else
to_char(round((aa.往前推6个月平均天数-ff.当月销售天数)/ff.当月销售天数*100,3),'990.999') || '%' end as 销售天数差异占比,
cc.当月26号到月底销售天数,
dd.当月1到25号销售天数,
ee.当月销售数量,
bb.往前推6个月平均销量,
case when nvl(ee.当月销售数量,0)=0 or nvl(bb.往前推6个月平均销量,0)=0  then null else
to_char(round((bb.往前推6个月平均销量-ee.当月销售数量)/ee.当月销售数量*100,3),'990.999') || '%' end as 销售数量差异占比

from aa
left join bb on aa.sellercode = bb.sellercode and aa.sellername = bb.sellername
left join cc on aa.sellercode = cc.sellercode and aa.sellername = cc.sellername
left join dd on aa.sellercode = dd.sellercode and aa.sellername = dd.sellername
left join ee on aa.sellercode = ee.sellercode and aa.sellername = ee.sellername
left join ff on aa.sellercode = ff.sellercode and aa.sellername = ff.sellername
</code></pre>
<h3 id="2issue和直连操作月底操作目前不用在手动发送">2.issue和直连操作（月底操作，目前不用在手动发送）</h3>
<p>地址：23.3</p>
<p>账号：bpotool</p>
<p>密码：oval163</p>
<p><strong>注意：最后语句 and 时间要做修改</strong></p>
<p>and a.createdate&gt;=to_date('2020-12-01 00:00:00','yyyy-mm-dd HH24:mi:ss')  -- 大于当月12月的 即本月</p>
<p>issue：</p>
<pre><code>SELECT 
 a.issuemanagetaskid as ID,
 a.resname as 负责人,
 p.projectcode as 项目代码,
 p.projectname as 项目名称,
 a.bucode as 药厂,
 a.dtcode as 经销商代码,
 a.dtname as 经销商名称,
 a.createdate as 创建日期,
 a.commbookingdate as 期望反馈日期,
 m.valuename as CMI沟通状态,
 d.valuename as 状态,
 c.valuename as 问题分类,
 --n.valuename as feedbackremark,
 a.specialitem as 原因备注,
 a.settledate as 预约跟进日期,
 a.directsup as 新老客户端,
 e.valuename as 紧急程度,
 a.problemdesc as 问题描述,
 a.dtresname as 经销商负责人,
 a.resphone as 联系电话,
 u.username as 上载人,
 a.executers as 完成人,
 a.stagestate as 分类状态,
 a.regionname as 省份,
 a.cmiresname as cmi负责人,
 a.datelastupdated as 完成时间
FROM issuemanagetask a ,projecttask p,dictionary d,dictionary c,dictionary e,dictionary m,dictionary n,usr u
WHERE 1=1 
  and d.type(+)='StatusIssue'
  and d.languagecode(+)='cn'
  and a.status=d.value(+)  
  and c.type(+)='QuestionClass'
  and c.languagecode(+)='cn'
  and a.questionclass=c.value(+)
  and e.type(+)='InterestDegree'
  and e.languagecode(+)='cn'
  and a.urgencylevel=e.value(+)
  and m.type(+)='StatusLinkup'
  and m.languagecode(+)='cn'
  and a.commstatus=m.value(+)
  and n.type(+)='FeedbackRemark'
  and n.languagecode(+)='cn'
  and a.feedbackremark=n.value(+) 
  and a.projecttaskid=p.projecttaskid  
  and a.maker=u.userid(+)
  and a.createdate&gt;=to_date('2020-12-01 00:00:00','yyyy-mm-dd HH24:mi:ss')
</code></pre>
<p>直连：</p>
<pre><code>SELECT 
  a.directtaskid as ID,
  a.resname as 负责人,
  c.projectcode as 项目代码,
  c.projectname as 项目名称,
  a.bucode as 药厂,
  b.regionname as 省份,
  b.cityname as 城市,
  a.dtcode as 经销商代码,
  a.dtname as 经销商名称,
  a.arrangedate as 安排日期,
  d.valuename as 状态,
  a.directdate as 预约安装日期,
  a.specialitem as 原因备注,
  e.valuename as 是否签署直连协议,
  b.ddidatapath as DDI直连数据查询路径,
  f.valuename as 直连方式,
  i.valuename as DDI直连方式,
  g.valuename as 直连方式明细,
  h.valuename as 总部直连,
  b.outbounddate as 出库日期开票日期,
  b.salesdate as DDI销售抓取时间点,
  b.purdate as DDI采购抓取时间点,
  b.invdate as DDI库存抓取时间点,
  b.businessres as 商务代表,
  b.businessphone as 商务电话,
  b.businessemail as 商务邮箱,
  l.valuename as 经销商级别,
  b.directres as 直连负责代表,
  b.hiscomparisonmon as 历史比对月数,
  a.dtresname as 联系人,
  a.resphone as 联系电话,
  a.executers as 完成人,
  a.datelastupdated  as 完成时间
FROM directtask a,ddirepositorydetail b,projecttask c,dictionary d,dictionary e,dictionary f,dictionary i,dictionary g,dictionary h,dictionary l
WHERE 1=1 
  and d.type(+)='StatusDirect'
  and d.languagecode(+)='cn'
  and a.status=d.value(+)
  and e.type(+)='YesOrNo'
  and e.languagecode(+)='cn'
  and b.isddiagreement=e.value(+)
  and f.type(+)='DirectLink'
  and f.languagecode(+)='cn'
  and b.directlink=f.value(+)
  and i.type(+)='DDIdirectLink'
  and i.languagecode(+)='cn'
  and b.ddidirectlink=i.value(+)
  and g.type(+)='DirectLinkDetail'
  and g.languagecode(+)='cn'
  and b.directlinkdetail=g.value(+)
  and h.type(+)='hqdirect'
  and h.languagecode(+)='cn'
  and b.hqdirect=h.value(+)
  and l.type(+)='DLMethod'
  and l.languagecode(+)='cn'
  and b.dealerlevel=l.value(+)
  AND a.directtaskid=b.directtaskid(+)  
  AND a.projecttaskid=c.projecttaskid    
  and c.status=41
  and a.createdate&gt;=to_date('2020-12-01 00:00:00','yyyy-mm-dd HH24:mi:ss')
  
</code></pre>
<h3 id="3系数维护数据添加">3.系数维护，数据添加</h3>
<p>地址：57.232</p>
<p>账户：dcph</p>
<p>密码：Hp678cd</p>
<p><strong>注意：发来的数据，要跟数据库中字段对应，依次执行插入确认</strong></p>
<p>（表格中数据第一列，插入一行，后边字段对照表中格式是否对应，sql中临时表插入第二步即可）</p>
<p><strong>注意提交事务。</strong></p>
<p><strong>注意:关注四个字段即可，经销商代码-产品代码-原始规格-原始单位</strong></p>
<pre><code>--先在第一列插入空白列 然后在价格原始规格中间插入空白列 剪切原始单位进去
delete from umtransform01    --第一步删除临时表数据
select * from umtransform01 for update --第二部将处理好的数据插入临时表
select * from umtransform u where exists (select 1 from umtransform01 u1 where u1.orgcode = u.orgcode --第三步查重
                 and u1.prodcode = u.prodcode
                 and u1.originalspec = u.originalspec
                 and u1.originalumname = u.originalumname)
                 
                 
update umtransform01 u01 set u01.prodid = (select p.prodid from product p where p.prodcode = u01.prodcode)  -- 第四步更新到两个正式表
update umtransform01 u01 set u01.orgid = (select oz.orgid from organization oz where oz.orgcode = u01.orgcode)
insert into umtransform select * from umtransform01  --最后执行插入
</code></pre>
<p><strong>问题反馈：</strong></p>
<p><strong>问题1</strong>：对方说明没有导出成功数据，根据数据查看数据库中是否有数据，有则已导入。（这次遇到的是对面没有给<strong>最小单位</strong>，对方导出不对，相应有的数据都要有除了品种可省略）</p>
<p>此步骤也可做为验证，临时表数据是否插入到正式表中。</p>
<pre><code>select * from umtransform u where u.orgcode = 'H871MH'   and u.prodcode = '228405' and u.originalspec = '50ml/瓶' and  u.originalumname = '盒'

</code></pre>
<p><strong>问题2</strong>: 接着上方问题继续，正式表中已经存在数据了，有列数据没有，对方重发数据，这边要重新添加操作，要先把正式表中刚才已添的数据删掉，再重新执行导入。</p>
<pre><code>delete from umtransform u where exists(select 1 from umtransform01 u1 where u1.orgcode = u.orgcode --
                 and u1.prodcode = u.prodcode
                 and u1.originalspec = u.originalspec
                 and u1.originalumname = u.originalumname)
</code></pre>
<h3 id="附加修改操作">附加：修改操作</h3>
<pre><code>/* 根据其orgcode 经销商代码，procode 产品代码，originalspec 原始规格，originalumname 原始单位
   去查找，然后根据提供的数据去对照修改一致即可，一般为修改价格 单位，但产品规格 转换系数等也要注意，最好依次对照保持正确性
*/
select * from umtransform u where u.orgcode ='H66151'   
and u.prodcode = '228237' and u.originalspec = '120丸*12瓶（大盒）' and  u.originalumname = '件'
for update
</code></pre>
<h3 id="4双引号对照处理-名称对照">4.双引号对照处理-名称对照</h3>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<p><strong>注意（两个字段的更改）：orgid是11，这时应该是替换掉11才对，for update更改其name，删除原始11的记录，并将更改后的记录status原来 80为198</strong></p>
<p>一步一步执行，避免后续出现问题。</p>
<p><strong>经销商代码</strong></p>
<pre><code>--对照双引号修改
// 通过查找经销商代码，获取到dtid
select * from organization o where o.orgcode = 'H633TY'--101182243
// 通过模糊查询客户名称和dtid，精确找到该经销商
// orgid大于100或者通过查找客户代码得到orgid，for update后直接锁当前数据，编辑即可（更改其name，并更改status为198）
select * from orgnamecollate om where om.orgname like '%莒南县人民医院%莒南县城天桥路156%' and om.dtid = 101182243
for update
</code></pre>
<h3 id="5每日必备每天巡检">5.每日必备（每天巡检）</h3>
<h4 id="1在18服务巡查4个文件夹">(1)在18服务巡查4个文件夹</h4>
<ol>
<li>
<p>先 连接到172.20.56.196</p>
</li>
<li>
<p>再连接172.21.0.18</p>
</li>
<li>
<p>巡查以下4个文件夹</p>
<p><strong>ALLFactoryDDIListen</strong>   检查该文件夹中文件是否正常  几十几百</p>
<p><strong>BusyPRDDDIDataFileListen</strong>  一般该文件夹为空</p>
<p><strong>PRDDDIDataFileListen</strong>  该文件夹中文件 主目录，文件数量</p>
<p><strong>PRDMSDDDIDataFileListen</strong>  文件是否正常被读取掉</p>
</li>
</ol>
<h4 id="2sql查看存储过程执行">(2)sql查看存储过程执行</h4>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<pre><code>// 查看存储过程执行开始结束时间，以及STATUS为END，如果在run需要注意
select * from procctrl pl order by pl.laststarttime desc

// 正在执行的存储过程，即正执行的功能
select * from v$db_object_cache where locks &gt; 0 and pins &gt; 0 and type='PROCEDURE';
</code></pre>
<h4 id="3索引检查">(3)索引检查</h4>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<pre><code>// 结果为空，如果有出来sql，再把下方sql执行
select 'alter index '||index_name||' rebuild online;' from user_indexes where status='UNUSABLE';
</code></pre>
<h4 id="4检查重名">(4)检查重名</h4>
<p>结果三个name，状态41 有效，28无效</p>
<pre><code>select u.employeename from usr u where u.status = 41 group by u.employeename having count(1)&gt;1 --检查重名
</code></pre>
<h4 id="518服务jmkx文件查看">(5)18服务jmkx文件查看</h4>
<p>查看log日志，error.log文件</p>
<h3 id="6日志内容学习">6.日志内容学习</h3>
<p>18服务，226都可</p>
<h4 id="1查看日志工具使用">(1)查看日志工具使用</h4>
<pre><code>// 测试数据库 log 举例，工具中file打开该文件连接后获取日志信息
D:\jboss-4.0.5.GA\server\stgportal\log 中的 dcms_workflow文件
</code></pre>
<h4 id="2logger工具结构sql查看">(2)logger工具，结构sql查看</h4>
<pre><code>// 先open object 打开config文件
D:\jboss-4.0.5.GA\server\stgportal\deploy\oval.war\WEB-INF 下的 config文件

// 然后通过seach 查询
// 一般常用 job，table，page
</code></pre>
<h3 id="7logger日志抓取sql">7.logger日志抓取sql</h3>
<p>连接59.196后再连接</p>
<p>地址：172.20.57.226</p>
<p>The  Whole SQL String=      -- 抓取其中sql到数据库中执行显示其数据是否有问题</p>
<h3 id="8进销存不平衡报告sql月初报告邮箱发送">8.进销存不平衡报告sql（月初报告，邮箱发送）</h3>
<p>数据库：57.227</p>
<p>账户：dcned</p>
<p>密码：Den6ydc5</p>
<p><strong>根据需求，选中导出为excel普通类型即可，导出为csv格式时产品代码前边0会省略。</strong></p>
<p>注意：to_date()时间要改变  to_date('2021-01-01','yyyy-mm-dd')</p>
<p>日期导出为上个月，例如2021-01-01，导出的为2020 12月的报告</p>
<pre><code>--进销存不平衡报告
  SELECT
a.inventoryimbalancedataid,a.userid,
 b.prodcode AS 产品代码,
  c.prdn AS 产品代码,
  a.province AS 省份,
  a.orgcode AS 经销商代码,
  a.orgname AS 经销商名称,
  a.salesman AS 代表名称,
   a.beginrealstock AS 期初库存,
   a.salesaqty AS SalesA,
    a.callinqty AS 调入,
  a.salesofmonthdata AS 销售,
  a.logicalstock AS 期末理论库存,
  a.realstock AS 期末实际库存,
  a.difference AS 差异,
  a.diffproportion AS 差异比例,
  a.lastluqtysum as 每月最后六天采购数据
 -- a.createdate

FROM inventoryimbalancedata a,
   product b,
   productlang c

WHERE 1=1
  and a.prodid= b.prodid
  and a.prodid=c.prodid
  --and a.year='2020'
  --and a.month='5'
  /*and a.year||lpad(a.month,2,0) &gt;=2014||lpad(7,2,0)
  and a.year||lpad(a.month, 2,0)&lt;=2014||lpad(7,2,0)  */
  and c.languagecode= 'cn'
  --order by a.createdate desc
/* and exists(select 1 from (select prodid from bumasterdetail bu,product p where bu.bumasterid = 100002280
       and bu.phamfactgorycode = p.phamfactgorycode and (bu.prodcode = p.prodcode or bu.prodcode is null)) prod
       where a.prodid=prod.prodid) */
and userid=100008067
and a.createdate&gt;=to_date('2021-01-01','yyyy-mm-dd')--本月存的是上月数据


-- 以下两步操作用于核查

-- 检查该用户id，根据相对应用户获取id
--select * from usr u where u.username = 'xuepengfei'--100008067

-- 根据id，获取数据信息，查看是否有数据
--select * from inventoryimbalancedata iv where iv.userid = 100008067 order by iv.createdate desc
</code></pre>
<h3 id="9黑名单维护月初邮箱回复">9.黑名单维护（月初，邮箱回复）</h3>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<p><strong>注意：日期字段</strong></p>
<pre><code>--黑名单维护
--select * from blacklist bl order by bl.createdate desc  --自检
 insert into blacklist (blacklistid ,bucode ,dtcode,dtname ,attr1 ) 
   select blacklistseq.nextval,bucode ,dtcode,dtname,'202101' from blacklist where attr1='202012' 
   -- 如上12月黑名单
</code></pre>
<h3 id="10跨省检查结果邮箱发送">10.跨省检查（结果邮箱发送）</h3>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<pre><code>--跨省检查
-- dtcode,stdcode,custname三个字段，依次插入
select dtcode,buyercode,a.oricustomername from skipregion_enable a where 1=2 for update;

--查询表核实
select * from skipregion_enable s where s.dtcode='H669JN' and s.buyercode='H55114' 

</code></pre>
<h3 id="11删除产品对照id常用">11.删除产品对照id(常用)</h3>
<p>up 227正式</p>
<p>可做个动态sql</p>
<pre><code>--删除产品对照
delete from prodcollate p where p.prodcollateid in (100239259,
100283274,
100766600,
100800708,
101109977,
101453479
)
</code></pre>
<h3 id="12产品规格添加">12.产品规格添加</h3>
<p>dcph 232</p>
<p>--</p>
<p>172.21.0.19<br>
administrator<br>
[ddX@9X7</p>
<p>D盘 CAH-cfg-config-salesout-treechdaysale表中查出来着哪个表</p>
<p>销售类型，例如</p>
<p>treech，，从药厂门户定制报告-BJTRT Tech日报表查看处理报表为哪个 相对应</p>
<hr>
<pre><code>-- for update添加上产品记录即可
select * from producttrt
</code></pre>
<h3 id="13同仁堂商业级别维护-等级维护">13.同仁堂商业级别维护--等级维护+</h3>
<p>dcph</p>
<p>添加产品代码-名称-级别 即可</p>
<pre><code> insert into trtstorglevel values 
 (trtstorglevelseq.nextval,'H489KT','山西乐群医药有限公司','二级商')
</code></pre>
<pre><code>DCPH230 同仁堂一期等级维护添加sql
    添加客户代码 客户名字 创建时间
   insert into bjtrtsellerlist (ORGCODE, ORGNAME, CREATEDATE) values ('H258BQ ', '江西弘仁医药有限公司', to_date('22-07-2020', 'dd-mm-yyyy'))
</code></pre>
<h3 id="14当前月前5工作日进入系统文件动态sql">14.当前月前5工作日进入系统文件动态sql</h3>
<pre><code>--当前月前五工作日进入系统的文件查询
--文件类型 例:(SM,PM,SD,PD,ID)
--数据来源 例:(WEB,DD)
--药厂 例:(SPAS,CAH)
select sf.filename as 文件名,sf.createdate as 创建日期 from salesdatafile sf where sf.filename like 'SM%'||to_char(sysdate,'yyyyMM')||'%WEB%SPAS%' 
and trunc(sf.createdate)&lt;=  (select trunc(max(calendardate))  from (select * from bipmbusinesscalendar br where br.year = to_char(sysdate,'yyyy') and br.month = to_char(sysdate,'MM') and nvl(br.salesactivity,'Y') &lt;&gt; 'N' order by br.calendardate) where rownum &lt; 6)
and sf.filestatus not in (21,50)

-- 后边不要加order by
</code></pre>
<h3 id="15删除打单操作常用动态sql页面已添加">15.删除打单操作（常用，动态sql页面已添加）</h3>
<p>up 227</p>
<p><strong>gatherplandetail 打单表</strong></p>
<pre><code>--打单id查看是存在打单信息
--select * from gatherplandetail gp where gp.gatherplandetailid=100723369 
--删除打单
delete from gatherplandetail g where g.gatherplandetailid in(100723373,
100723369,
100723370,
100723371,
100723372,
100723374)
</code></pre>
<h3 id="16产品新增查看是否重复问题">16.产品新增查看是否重复问题</h3>
<p>up 227</p>
<p><strong>product 产品表</strong></p>
<pre><code>--查询产品是否存在 重复
select * from product pr where pr.prodcode in('224053',
'224054',
'224055'
)
</code></pre>
<h3 id="17新建药厂bu">17.新建药厂BU</h3>
<pre><code>--新建药厂步骤
-- 1
select * from joblocktemplate for update
select joblocktemplateseq.nextval from dual -- 100000320
-- 2
select joblockseq.nextval from dual --100000640
select * from joblock for update
-- 3 
select * from accesslist;
insert into accesslist (ACCESSLISTID, ACCESSTYPE, CREATEDATE, DATELASTUPDATED, USERID, ACCESSLISTCODE, ACCESSLISTNAME, WORKDAYLIMIT)
values (accesslistseq.nextval, 10, sysdate, sysdate, 1, 'TEVA', 'TEVA', 1);
-- 4
select * from bumaster bu order by bu.createdate desc

此处在统一门户中配置--基础数据---业务伙伴---DDI打单目录：
经销商目录配置：经销商代码 经销商名称
BU药厂配置：选择相应BU

最终数据清洗，原始文件处理后拆分，在统一门户--数据清洗----快速通道--药厂文件展示 产看日志以及是否拆分成功。也可从数据库中直接查看，sql参考 “统一门户”标签下sql查看。
即原始数据到拆分的过程处理

-- 5 时间窗口配置  calendar_teva_month  calendar_teva_day
（参考下方DDI时间窗口配置value）
门户页面--系统--期间管理--DDI时间窗口配置验证是否配置成功

-- 6 
SELECT *
FROM dictionary a  

WHERE 1=1    
	and a.languagecode='cn'   
	and a.type = 'PharmacyFactory'        
  for update
    
  select dictionaryseq.nextval from dual;--130016248
  
  -- 7
  --filename_pad_ddi 里防止重复的地方添加该药厂
  --即存储过程查看添加药厂
</code></pre>
<h6 id="ddi时间窗口">DDI时间窗口</h6>
<pre><code>表:calendarconfig

&lt;OPTION value=10&gt;月流向&lt;/OPTION&gt;
&lt;OPTION value=20&gt;月库存&lt;/OPTION&gt;
&lt;OPTION value=30&gt;月购进&lt;/OPTION&gt;
&lt;OPTION value=40&gt;周流向&lt;/OPTION&gt;
&lt;OPTION value=50&gt;周库存&lt;/OPTION&gt;
&lt;OPTION value=60&gt;周购进&lt;/OPTION&gt;
&lt;OPTION value=70&gt;日流向&lt;/OPTION&gt;
&lt;OPTION value=80&gt;日库存&lt;/OPTION&gt;
&lt;OPTION value=90&gt;日购进&lt;/OPTION&gt;
&lt;OPTION value=100&gt;半月流向&lt;/OPTION&gt;
&lt;OPTION value=110&gt;半月库存&lt;/OPTION&gt;
&lt;OPTION value=120&gt;半月购进&lt;/OPTION&gt;
</code></pre>
<h3 id="18期间主数据-日期-启用-关闭-未用-状态已添到22年暂时用不到">18.期间主数据--日期 启用-关闭-未用 状态(已添到22年，暂时用不到)</h3>
<p>处理中心 下的      基础数据--期间管理---期间主数据 目录，系统标准期间 查看</p>
<p>sql 如下：</p>
<pre><code> -- 查看该表，状态43 为启用
 select * from dcperioddetail WHERE 1=1  and status = 43
 -- 表中id 获取到后，查看此id为条件下的数据S
 select * from dcperioddetail dc where dc.datacleanperiodid = 1000 for update
</code></pre>
<h3 id="19流向归档问题-">19.流向归档问题  ---</h3>
<p>统一门户---数据采集--流向文档下载 查看</p>
<pre><code>主表:ORIGINALFLOWFILELIST

-- select * from orgdistributor o where o.orgcode ='HJ4694' --最好先核查 是否存在，然后再执行插入

-- 根据orgcode 找到其 orgid orgname regioncode 三个字段，根据这三个字段插入下方即可，其他不需要更改

select * from organization oz where oz.orgcode = 'HJ4694' --需要插入打单目录的数据从机构表里取


insert into orgdistributor (ORGDISTRIBUTORID, ORGID, ORGCODE, ORGNAME, REGIONCODE, PHONENUMBER, ELECTORNICUPLOAD, STATUS, COLLECTFRECUENCY, COLLECTDAYS, COLLECTTYPE, ADDDATE, PAUSEDATE, PAUSEREASON, CUSTOMERCODE, FEEDBACK, COMMENTS, CUSTOMERNAME, EMPLOYEENAME, CREATEDATE, DATELASTUPDATED, LASTMAKERUSERID, ORGCONTACT, ORGCONTACTPHONE, COLLECTDAYS2, INVENTORYUPLOAD, ORGRESPERSON, CMIRESPERSON, ORGADRESS, USERID, PHARMACEUTICAL, AREANAMEADD, AREAMANAGERADD)
values (orgdistributorseq.nextval, 106372779, 'HJ4694', '南京筑康医药有限公司', '320000', '1', 0, 1, 1, 1.00000, 1, null, null, null, null, null, null, null, '1', sysdate, sysdate, 1, null, null, 4.00000, 0, null, null, null, null, null, null, null);
</code></pre>
<h3 id="20打单目录变更-操作">20.打单目录变更 操作</h3>
<pre><code>-- 查询出负责人对应code
--select * from usr u where u.employeename = '王雅静'--449

-- gatherplandetail打单表
--select * from gatherplandetail gp where gp.gatherplandetailid = 100719809

   gatherpersion		上载人
   gatherpersioncode	上载人代码
   ovalemployeename		收集人
   employeecode			收集人代码
   dataperson			数据负责人
   datapersoncode		数据负责人代码
   
-- 具体更改根据提供 情况进行sql处理
--更改 上载人为 xxx，上载人代码为xxx，条件为 提供的表格中gatherplandetailid 即id
update gatherplandetail gp set gp.gatherpersion = '王雅静',gp.gatherpersioncode = '449' 
where gp.gatherplandetailid in (100719809,100717594,100717595)
-- 更改 收集人
update gatherplandetail gp set gp.ovalemployeename = '王雅静',gp.employeecode = '449' 
where gp.gatherplandetailid in (100719809,100717594,100717595)
--更改 数据负责人
update gatherplandetail gp set gp.dataperson = '王雅静',gp.datapersoncode = '449' 
where gp.gatherplandetailid in (100719809,100717594,100717595)

下方为查询确认 避免漏掉数据 select …… from table where …… in()  格式
--select  gp.ovalemployeename,gp.employeecode from gatherplandetail  gp
--select  gp.gatherpersion from gatherplandetail gp 
--select  gp.dataperson from gatherplandetail gp 
--where gp.gatherplandetailid in (100719809)
</code></pre>
<h3 id="21trt省市修改">21.trt省市修改</h3>
<p>处理中心  dcchc 57.227</p>
<pre><code>--trt省市修改

-- 通过条件 省 名称查询得到 code
select * from region r where r.regionname = '天津市'--120000
-- 通过条件 市 获取到 市 code    市县区 都在city表
select * from city c where c.cityname = '天津市'--440100 120100
-- 更改其客户省份 城市
select * from historyofdaysales hd where hd.historyofdaysalesid in (432637634)for update
</code></pre>
<p>然后到药厂门户查看是否正确 dcph</p>
<pre><code>select * from historyofsales_day hd where hd.historyofsalesid in (432642763)
</code></pre>
<h3 id="22adj报告每月第6工作日">22.ADJ报告(每月第6工作日)</h3>
<p>ADJ修改日期  <strong>每个月开始的第六个工作日</strong>发给Sang, Yu Ting<a href="mailto:yuting.sang@oval-tech.com">yuting.sang@oval-tech.com</a> （包含第六个工作日）</p>
<p><strong>注意：日期 期间</strong></p>
<pre><code>
   select a.SELLERPROVINCENAME as SELLERPROVINCENAME,
          a.SELLERCITYNAME as SELLERCITYNAME,
          a.sellercode,
          a.sellername,
          a.sellerrepname,
          buyercode,
          buyername,
          a.MAKER,
          a.prodcode,
          a.prodname,
          dcname,
          a.qty,
          --count(1) as aa,
          extract(year from SALESDATE) || '0' || extract(month from SALESDATE) as salesdate,
          a.sdtype,
          case
            when a.adjsign = 'n' then
             'Normal'
            else
             'ADJ'
          end as adj,
          case when a.recordtype='HIS' then 'T'
            when a.recordtype='DDI' then 'D'
              when a.recordtype='WEB' then 'W'
                when a.recordtype='MN' then 'U'
                  when a.recordtype='MOD' then 'M'
                    when a.recordtype='VIR' then 'V'
                      end as recordtype
     from Historyofsales_new@Dcph232 a
    where 1 = 1
      and a.adjsign &lt;&gt; 'n'
      and salesdate &gt;= to_date('2020-07-01', 'yyyy-MM-dd')
      and salesdate &lt; to_date('2020-08-01', 'yyyy-MM-dd')
      and a.dcname &lt;&gt; 'OTH'
      and a.dcname&lt;&gt;'BSL'
      and a.dcname&lt;&gt;'MSD'
      and a.dcname&lt;&gt;'BLG'
      --and a.VERSION &lt;&gt; '201301-20130217-170413MSD'
      and a.recordtype &lt;&gt; 'VIR'

   union all
   select a.SELLERPROVINCENAME as SELLERPROVINCENAME,
          a.SELLERCITYNAME as SELLERCITYNAME,
          a.sellercode,
          a.sellername,
          a.sellerrepname,
          buyercode,
          buyername,
          a.MAKER,
          a.prodcode,
          a.prodname,
          dcname,
          a.qty,
          --count(1) as aa,
          extract(year from SALESDATE) || '0' || extract(month from SALESDATE) as salesdate,
          a.sdtype,
          case
            when a.adjsign = 'n' then
             'Normal'
            else
             'ADJ'
          end as adj,
        --  '' as  'Normal',
          case when a.recordtype='HIS' then 'T'
            when a.recordtype='DDI' then 'D'
              when a.recordtype='WEB' then 'W'
                when a.recordtype='MN' then 'U'
                  when a.recordtype='MOD' then 'M'
                    when a.recordtype='VIR' then 'V'
                      end as recordtype/*count(1)*/
     from Historyofsales_new@Dcphmsd232 a
    where 1 = 1
      and a.adjsign &lt;&gt; 'n'

      and salesdate &gt;= to_date('2020-07-01', 'yyyy-MM-dd')
      and salesdate &lt; to_date('2020-08-01', 'yyyy-MM-dd')
      and a.dcname='MSD'
      and a.recordtype &lt;&gt; 'VIR'

   union all
   select a.SELLERPROVINCENAME as SELLERPROVINCENAME,
          a.SELLERCITYNAME as SELLERCITYNAME,
          a.sellercode,
          a.sellername,
          a.sellerrepname,
          buyercode,
          buyername,
          a.MAKER,
          a.prodcode,
          a.prodname,
          dcname,
          a.qty,
          --count(1) as aa,
          extract(year from SALESDATE) || '0' || extract(month from SALESDATE) as salesdate,
          a.sdtype,
          case
            when a.adjsign = 'n' then
             'Normal'
            else
             'ADJ'
          end as adj,
          case when a.recordtype='HIS' then 'T'
            when a.recordtype='DDI' then 'D'
              when a.recordtype='WEB' then 'W'
                when a.recordtype='MN' then 'U'
                  when a.recordtype='MOD' then 'M'
                    when a.recordtype='VIR' then 'V'
                      end as recordtype
     from Historyofsales_new@Dcphblg232 a
    where 1 = 1
      and a.adjsign &lt;&gt; 'n'
      and salesdate &gt;= to_date('2020-07-01', 'yyyy-MM-dd')
      and salesdate &lt; to_date('2020-08-01', 'yyyy-MM-dd')
      and a.dcname='BLG'
      and a.recordtype &lt;&gt; 'VIR'


   union all
   select a.SELLERPROVINCENAME as SELLERPROVINCENAME,
          a.SELLERCITYNAME as SELLERCITYNAME,
          a.sellercode,
          a.sellername,
          a.sellerrepname,
          buyercode,
          buyername,
          a.MAKER,
          a.prodcode,
          a.prodname,
          dcname,
          a.qty,
          --count(1) as aa,
          extract(year from SALESDATE) || '0' || extract(month from SALESDATE) as salesdate,
          a.sdtype,
          case
            when a.adjsign = 'n' then
             'Normal'
            else
             'ADJ'
          end as adj,
          case when a.recordtype='HIS' then 'T'
            when a.recordtype='DDI' then 'D'
              when a.recordtype='WEB' then 'W'
                when a.recordtype='MN' then 'U'
                  when a.recordtype='MOD' then 'M'
                    when a.recordtype='VIR' then 'V'
                      end as recordtype
     from Historyofsales_new@Dcphhsr232 a
    where 1 = 1
      and a.adjsign &lt;&gt; 'n'
      and salesdate &gt;= to_date('2020-07-01', 'yyyy-MM-dd')
      and salesdate &lt; to_date('2020-08-01', 'yyyy-MM-dd')
      and a.recordtype &lt;&gt; 'VIR'
</code></pre>
<h3 id="23对照删除">23.对照删除</h3>
<pre><code>--对照删除

-- 临时表
delete from org_temp	
--插入商业代码 orgcode
select * from org_temp for update 
--查找临时表中数据数量是否与excel中一致
select count(1) from org_temp 
--查找organization表，当临时表中code与之相同的 倒序查出
select o.orgid,o.orgcode from organization o,org_temp ot where o.orgcode = ot.orgcode order by o.orgcode desc 
-- 查出orgid，通过客户代码查出dtid 同样方式

delete from orgnamecollatetemp --临时表
--依次插入
select om.dtid,om.orgname,om.orgid from orgnamecollatetemp om for update
-- 查找确认
select count(1) from orgnamecollate om where exists(select 1 from orgnamecollatetemp ot where ot.dtid = om.dtid and ot.orgname = om.orgname and ot.orgid = om.orgid)--3857

create table orgnamecollate0222del as select * from orgnamecollate om where exists(select 1 from orgnamecollatetemp ot where ot.dtid = om.dtid and ot.orgname = om.orgname and ot.orgid = om.orgid)

select count(1) from orgnamecollate0222del--3857
delete from orgnamecollate om where exists(select 1 from orgnamecollate0222del om2 where om.orgnamecollateid = om2.orgnamecollateid)--3857

select * from orgnamecollate0222del

select count(1) from orgcodecollate oc where exists(select 1 from orgnamecollatetemp ot where ot.dtid = oc.dtid and ot.orgname = oc.orgcode and ot.orgid = oc.orgid)--3853
create table orgcodecollate0222del as select * from orgcodecollate oc where exists(select 1 from orgnamecollatetemp ot where ot.dtid = oc.dtid and ot.orgname = oc.orgcode and ot.orgid = oc.orgid)--3853
-- 删除
delete from orgcodecollate oc where exists (select 1 from orgcodecollate0222del oc2 where oc2.orgcodecollateid = oc.orgcodecollateid)

select * from orgcodecollate0222del
</code></pre>
<h3 id="24通过客户代码-找到与之对应的-县区-地址-oraganization表">24.通过客户代码 找到与之对应的 县区、地址 （oraganization表）</h3>
<p>organization 表，其中有经销商详细内容   字段</p>
<pre><code> --通过客户代码orgcode 找到相对应 县区、详细地址
 select o.orgcode as 客户代码 ,o.countyname as 县区 ,o.address as 地址 from organization o
where o.orgcode in ('H904DK','K72614','H3497C')
</code></pre>
<h3 id="25插入打单目录数据-即流向归档">25.插入打单目录数据 （即流向归档）</h3>
<pre><code>--select oz.regioncode from organization oz where oz.orgcode = 'H552RB' --需要插入打单目录的数据从机构表里取
-- 107492511  K07832  佛慈大药房连锁(兰州)有限责任公司  620000
--104917457   H457MF  甘肃陇中老百姓医药连锁有限公司  620000
--105180063  H552RB  青海金珠药业连锁有限公司
--630000

-- regioncode 地区代码
--先从organization获取到regioncode然后 插入 orgid orgcode orgname regioncode 四个字段内容

--select * from orgdistributor o order by o.createdate desc
 insert into orgdistributor(ORGDISTRIBUTORID,
                      ORGID,
                      ORGCODE,
                      ORGNAME,
                      REGIONCODE,
                      PHONENUMBER,
                      ELECTORNICUPLOAD,
                      STATUS,
                      COLLECTFRECUENCY,
                      COLLECTDAYS,
                      COLLECTTYPE,
                      ADDDATE,
                      PAUSEDATE,
                      PAUSEREASON,
                      CUSTOMERCODE,
                      FEEDBACK,
                      COMMENTS,
                      CUSTOMERNAME,
                      EMPLOYEENAME,
                      CREATEDATE,
                      DATELASTUPDATED,
                      LASTMAKERUSERID,
                      ORGCONTACT,
                      ORGCONTACTPHONE,
                      COLLECTDAYS2,
                      INVENTORYUPLOAD,
                      ORGRESPERSON,
                      CMIRESPERSON,
                      ORGADRESS,
                      USERID,
                      PHARMACEUTICAL,
                      AREANAMEADD,
                      AREAMANAGERADD) values(orgdistributorseq.nextval,
              105180063,	-- orgid 
              'H552RB',		-- orgcode
              '青海金珠药业连锁有限公司',	--orgname
              '630000',		--regioncode
              '1',
              0,
              1,
              1,
              1.00000,
              1,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              '1',
              sysdate,
              sysdate,
              1,
              null,
              null,
              4.00000,
              0,
              null,
              null,
              null,
              null,
              null,
              null,
              null);

</code></pre>
<h3 id="26月末打单维护月末操作最后一个工作日">26.月末打单维护（月末操作，最后一个工作日）</h3>
<p>第一步 检查打单：</p>
<pre><code>select * from gatherplandetail where yearmonth='201809' --yearmonth为新增打单日期--一般为下个月
</code></pre>
<p>第二步  更新打单表的cahorgcode</p>
<pre><code>update gatherplandetail a set  a.cahorgcode=
 (select o.orgcode from projectorg b,organization o where o.ovalorgcode=b.ovalorgcode and b.projectorgcode=a.dtcode and b.projectcode=a.projectcode and a.yearmonth='201809' and a.projectvalue=1 ) where a.yearmonth='201809' and a.projectvalue=1 and a.dtcode not in('700103')--yearmonth为新增打单日期
</code></pre>
<p>报错的话需查出问题，错误一般是三方表有问题，需一个个检查三方的明细，如三方检查无错误再检查其他表；三方表：projectorg 主数据表：organization</p>
<p>第三步 第二步执行不报错再执行</p>
<pre><code>update gatherplandetail a set a.cahorgcode=a.dtcode where a.cahorgcode is null
</code></pre>
<p>第四步 按照BPO所提需求拉取数据并提供给BPO</p>
<pre><code>SELECT
    distinct
  a.orgcode            AS 公司代码,
  a.orgname             AS 客户名称,    
  u.employeename        AS 代表名称,    
  d.employeename       AS CMI负责人
  FROM organization a, 
  usr   u,
 /*tmp20150430 b,*/--dtcode所在的表，需新建
 usr    d,
 gatherplandetail g
 WHERE 

  a.employeecode=u.employeecode(+)

 /* and a.orgcode=b.dtcode*/

  and a.cmiresperson=d.employeecode(+)

  /*and exists (select b.dtcode from tmp20150430 b)*/

  and a.orgcode=g.cahorgcode

  and g.yearmonth='201809' --yearmonth为新增打单日期
</code></pre>
<p>第五步 根据BPO提供EXcel数据，到数据库更新数据</p>
<ol>
<li>
<p>清空临时表</p>
<pre><code>truncate table tmp20150601 
</code></pre>
</li>
<li>
<p>将BPO提供的Excel表数据导入tmp20150601中，只需要公司代码(dtcode)、代表名称(name1)、CMI名称(name2)</p>
<pre><code> select * from tmp20150601 for update 
</code></pre>
</li>
<li>
<p>更新临时表</p>
<pre><code>update tmp20150601 a set employeecode=(select employeecode from usr b where a.name1=b.employeename and status=41)
   where exists(select 1 from usr b where a.name1=b.employeename and status=41);

   update tmp20150601 a set cmiresperson=(select employeecode from usr b where a.name2=b.employeename and status=41)
   where exists(select 1 from usr b where a.name2=b.employeename and status=41);

</code></pre>
</li>
<li>
<p>检验查有没为空</p>
<pre><code> select * from tmp20150601 where cmiresperson is null;

 select * from tmp20150601 where employeecode is null;

</code></pre>
</li>
<li>
<p>更新到正式环境（第4检查不到数据时再执行）</p>
<pre><code> update organization a set a.employeecode=(select b.employeecode from tmp20150601 b where a.orgcode=b.dtcode)where exists(select 1 from tmp20150601 b where a.orgcode=b.dtcode);

   update organization a set a.cmiresperson=(select b.cmiresperson from tmp20150601 b where a.orgcode=b.dtcode)where exists(select 1 from tmp20150601 b where a.orgcode=b.dtcode); 

</code></pre>
</li>
</ol>
<h3 id="27统一门户新增账户后开通中文账户权限操作">27.统一门户新增账户后，开通中文账户权限操作</h3>
<p>举例如下，usr 用户表，根据用户名 username 查找后，删除其 employeecode 中的值即可 即为空值</p>
<pre><code>select * from usr u where u.username ='panxixi'for update
</code></pre>
<h3 id="28统一门户cmi负责人变更">28.统一门户CMI负责人变更</h3>
<pre><code>-- 统一门户CMI商业负责人变更
--select *  from gatherplandetail g where g.gatherplandetailid =100729042

-- 先usr表中找到 employeename,employeecode 分别对应 gatherplandetail表中dataperson,datapersoncode
--select u.employeecode from usr u  where u.employeename = '杨燕'and u.status = 41 --10C 466  523



update gatherplandetail g
   set g.dataperson = '杨燕', g.datapersoncode = '523'
 where g.gatherplandetailid in (100729510,
                                100729516,
                                100729130,
                                100729517)
</code></pre>
<h3 id="29ddi直连管理表-内容-附直连管理job-table等更改后要重启服务生效">29.DDI直连管理表 内容 （附：直连管理job table等更改后要重启服务生效）</h3>
<p>常用表：</p>
<pre><code>select * from usr  --注意：adminflag 是否管理员  menuflag:是否全部权限 默认cmi看到cmi的，ddi看到ddi的。
select  *  from projecttask --项目管理表
select  *  from directtask --直连安装沟通表
select  *  from issuemanagetask --issue管理表
</code></pre>
<pre><code> select *  from directtask di where di.projecttaskid =1685 and di.orgcode='H2203J' 
 select  *  from projecttask p where p.projectname like '%欧%' --1945 baier  1685 OMRON
 select  *  from projecttask p where p.projectname like '%拜%' --1645
 
  select *  from directtask di where di.status = 10 
 select distinct di.status from directtask di
 select * from dictionary di where di.type='StatusDirect'
 
   select *  from directtask di where di.dtcode='BSC000001' --王轶宸
</code></pre>
<h3 id="30统一门户-客户对照-反写-问题-查看">30.统一门户 客户对照 反写 问题 查看</h3>
<p>前端页面目录为：基础数据--对照清理--客户别名修改</p>
<p>相对应表数据库中查看</p>
<pre><code>--select * from orgcodecollate org where org.status=10 
--update orgcodecollate org set org.status=80  where org.status=10 
 -- 之前数据状态10改为80 不反写之前数据
--select * from jobflowctrlseller --反写数据表     --delete from jobflowctrlseller
--select * from batchupdateoriginallock for update --状态改为80 结束反写，60执行中  1反写 2 导总帐
-- select * from orgcodecollate org where org.status=198  --- 行业库  状态198改为 80
-- 正在执行的存储  会话 insert 结束
</code></pre>
<h3 id="31申诉核查数据-feedbacktrack表">31.申诉核查数据 feedbacktrack表</h3>
<p>例如：上传数据错误，需要后台手动</p>
<pre><code> select * from feedbacktrack fd order by fd.createdate desc for update
</code></pre>
<h3 id="32打单更改收集人上载人">32.打单更改收集人上载人</h3>
<p>存储：update_gatherplandetailperson</p>
<h3 id="33知识库更新">33.知识库更新</h3>
<pre><code>create table ddirepositorydetail0430bak as select * from ddirepositorydetail --beifen
select count(1) from ddirepositorydetail0430bak
create table ddirepositorydetail0508bak as select * from ddirepositorydetail --beifen
select count(1) from ddirepositorydetail0508bak --16000

truncate  table ddirepositorydetail04
select * from ddirepositorydetail04 for update -- delete from ddirepositorydetail04
update ddirepositorydetail ddi set (

  ddi.firstarrangentdate ,--首次安装完成时间

  ddi.datelastupdated ,
  ddi.erpbrand ,--ERP品牌
  ddi.worktime ,--工作时间
  ddi.hqdirect ,
 ddi.ofdirectname ,--关联总公司名称
    ddi.directlink ,--直连方式
 ddi.dbdirectlink  ,--DB直连分类  
 ddi.hiscomparisonmon ,--客户端版本
  ddi.databasetype  ,--数据库类型
  ddi.productstandard,--产品筛选标准 
  ddi.nostandardproduct,--非标产品筛选条件 
  ddi.vinventorytype,--V库存类型 

  ddi.vinventoryupdate ,--V库存更新频率

  ddi.invdate ,--V库存更新时间
ddi.isinventorydate ,--是否提供库存时间字段
    ddi.spdataupdate  ,--S\P数据更新频率
  ddi.salesdate  ,--S\P数据更新时间
 ddi.isspecialtype ,--是否存在特殊业务类型
  ddi.specialtype , --特殊业务类型
  ddi.clientgettime , --客户端抓取时间点
  ddi.ftpfrequency ,--FTP传输时间
  ddi.webserviceupdatetime,--WebService更新时间
  ddi.directlinkexplain 
)=(
select  
 firstarrangentdate,--首次安装完成时间
  sysdate,
  erpbrand,--ERP品牌
  worktime,--工作时间
  case 
  hqdirect 
  when '是' then 1
  when '否' then 2  end ,--是否总分公司
  
  ofdirectname,--关联总公司名称
  
  case
  directlink 
  when  'FTP' then 1
  when 'DB直连' then 2
  when 'WebService' then 3 end ,--直连方式
  
  case
  dbdirectlink 
  when '专用视图'then 1
  when '综合试图'then 2
  when '表结构' then 3
  when '文件夹' then 4 end ,--DB直连分类  

  
  hiscomparisonmon ,--客户端版本
  
  case
  databasetype 
  when 'SQLServer' then 1
  when 'MySQL' then 2
  when 'Oracle'then 3
  when 'ODBC'then 4
  when '其他' then 5 end ,--数据库类型
  
  case
  productstandard 
  when '标准产地' then 1
  when '非标准产地' then 2 end ,--产品筛选标准 

  case
  nostandardproduct
  when '产品集合' then 1
  when  '流向卡号' then 2
  when '产品代码' then 3
  when '其他' then  4
  end,--非标产品筛选条件 

 case
  vinventorytype 
  when '实时库' then 1
  when '中间库' then 2
  when '历史'then 3
  end ,--V库存类型 

  case 
  vinventoryupdate 
  when '每天' then 1
  when '其他' then 2
  end ,--V库存更新频率
  
  invdate,--V库存更新时间
  
  case 
  isinventorydate
  when '是' then 1
  when '否' then 2
  end,--是否提供库存时间字段
  
  case
  spdataupdate
  when '每天' then 1
  when '其他' then  2
  end,--S\P数据更新频率
  
  salesdate,--S\P数据更新时间
  
  case
  isspecialtype
  when '是' then 1
  when '否' then 2
  end,--是否存在特殊业务类型
  
  specialtype, --特殊业务类型
  clientgettime, --客户端抓取时间点
  ftpfrequency,--FTP传输时间
   webserviceupdatetime,--WebService更新时间
   directlinkexplain --特例直连规则说明


 from  ddirepositorydetail04 ddi04
  where ddi04.ddirepositorydetailid=ddi.ddirepositorydetailid

) where exists(select 1 from ddirepositorydetail04 d4 where d4.ddirepositorydetailid=ddi.ddirepositorydetailid)
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h3 id="日常">日常</h3>
<pre><code>--日常
-- 查看存储是否都为END 挂了就重新跑 (除了正式库，jmkx也要看一下)
select * from procctrl pl order by pl.laststarttime desc 
select * from v$db_object_cache where locks &gt; 0 and pins &gt; 0 and type='PROCEDURE';--查询正在跑的存储
select 'alter index '||index_name||' rebuild online;' from user_indexes where status='UNUSABLE';

-- 期间是否正常
select * from historyofsales hs where hs.POSTDATE&gt;=to_date('2021-02-01','yyyy-mm-dd')

--检查重名
select u.employeename from usr u where u.status = 41 group by u.employeename having count(1)&gt;1 

---18服务器 c盘 jmkx查看error日志
</code></pre>
<h3 id="统一门户">统一门户</h3>
<pre><code>--统一门户文件整体流程
select * from joblocktemplate--配置的模板
select * from ddidatafiledetail dd where dd.datatype = 'S' order by dd.createdate desc--DDI原始文件表头
select * from ddioriginalsalesdata ds where ds.datafiledetailid = 119190832 --DDI原始文件明细
--拆分后
select *  from salesdatafile 
select * from originalsalesdata os where os.salesdatafileid = 105227757

--- 查询文件 例如 销售
 select * from salesdatafile sa where sa.reffileid=115881514  --可根据filename查看
  select * from datafileactionlog da where da.datafiledetailid=115881514 --文件状态 ：21失败  50卸载  10刚入
  
-- 不反写之前数据 状态10改为80
--select * from orgcodecollate org where org.status=10 
update orgcodecollate org set org.status=80 where org.status=10

</code></pre>
<p>​	进销存 ：</p>
<p><strong>采购： purchase</strong></p>
<p><strong>销售：sales</strong></p>
<p><strong>库存：inventory</strong></p>
<p>select * from ddidatafiledetail dd where dd.datatype = 'P' order by dd.createdate desc--DDI原始文件表头<br>
select * from ddioriginalsalesdata ds where ds.datafiledetailid = 100219044 --DDI原始文件明细  销售<br>
select * from ddioriginalinventorydata ds where ds.datafiledetailid = 100219042 --DDI原始文件明细  库存<br>
select * from ddioriginalpurchasedata ds where ds.datafiledetailid = 100219044 --DDI原始文件明细   采购</p>
<p>日志：</p>
<pre><code> 
  select * from ddidatafileactionlog  -- 查看原始文件 日志
 
 select * from datafileactionlog da where da.datafiledetailid=115881514 --文件状态 ：21失败  50卸载  10刚入

</code></pre>
<p>其他 例如 18服务文件夹</p>
<p>SalesDataBakup，手工上载后的文件</p>
<p>DataFileListen  手工上载</p>
<p>AllFactionyDDIListen：原始文件</p>
<p>PRDDDIDateFileListen：拆分后文件，（注意是否卡文件） 拆分中的文件</p>
<p>DDIlog：拆分后生成到目录文件</p>
<p>门户页面：文件问题</p>
<p>数据清洗------快速通道-----药厂文件展示（经销商代码，药厂，然后搜索）</p>
<p>原始文件在ddiorg，，表中看，然后可以ddilog中error日志查看错误</p>
<h3 id="1trtte当月销售天数和历史平均销售天数和数量维护-月底">1.TRTTE当月销售天数和历史平均销售天数和数量维护 (月底)</h3>
<p>登录如下</p>
<p>地址：57.227</p>
<p>账号：dcchc</p>
<p>密码：Chc2cd80</p>
<p><strong>注意点：上月26日到本月25日为一月销量，具体看sql，时间修改</strong></p>
<pre><code>--TRTTE当月销售天数和历史平均销售天数和数量
 --修改对应日期  一般上个月26 号 到当月25 号  有两个特殊时间要注意

with aa as(
 select hs.sellercode,hs.sellername,count(1)/6 as 往前推6个月平均天数 from (select oz.orgcode as sellercode,oz.orgname as sellername,hs.salesdate from historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and hs.salesdate &gt;= to_date('2020-05-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-11-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname,hs.salesdate) hs group by hs.sellercode,hs.sellername
)
,bb as(
 select oz.orgcode as sellercode,oz.orgname as sellername,sum(hs.originalqty)/6 as 往前推6个月平均销量 from  historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and hs.salesdate &gt;= to_date('2020-05-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-11-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname
),cc as(
 select hs.sellercode,hs.sellername,count(1) as 当月26号到月底销售天数 from (select oz.orgcode as sellercode,oz.orgname as sellername,hs.salesdate from historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and  hs.salesdate &gt;= to_date('2020-11-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-11-30','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname,hs.salesdate) hs group by hs.sellercode,hs.sellername
),dd as(
 select hs.sellercode,hs.sellername,count(1) as 当月1到25号销售天数 from (select oz.orgcode as sellercode,oz.orgname as sellername,hs.salesdate from historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and  hs.salesdate &gt;= to_date('2020-12-01','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-12-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname,hs.salesdate) hs group by hs.sellercode,hs.sellername
),ee as(
 select oz.orgcode as sellercode,oz.orgname as sellername,sum(hs.originalqty) as 当月销售数量 from  historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and hs.salesdate &gt;= to_date('2020-11-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-12-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname
),ff as(
 select hs.sellercode,hs.sellername,count(1) as 当月销售天数 from (select oz.orgcode as sellercode,oz.orgname as sellername,hs.salesdate from historyofdaysales hs,organization oz where hs.sellerid = oz.orgid and  hs.salesdate &gt;= to_date('2020-11-26','yyyy-MM-dd') and hs.salesdate &lt;= to_date('2020-12-25','yyyy-MM-dd') and exists (select 1 from buproduct bp where bp.prodid = hs.prodid and bp.bucode = 'TRT Tech')  group by oz.orgcode,oz.orgname,hs.salesdate) hs group by hs.sellercode,hs.sellername
)

select aa.sellercode as 经销商代码,aa.sellername as 经销商名称,ff.当月销售天数,aa.往前推6个月平均天数,
--(aa.往前推6个月平均天数-cc.当月26号到月底销售天数-dd.当月1到25号销售天数)/(cc.当月26号到月底销售天数+dd.当月1到25号销售天数) as 销售天数差异占比1,
case when  nvl(aa.往前推6个月平均天数,0)=0 or  nvl(ff.当月销售天数,0)=0 then null else
to_char(round((aa.往前推6个月平均天数-ff.当月销售天数)/ff.当月销售天数*100,3),'990.999') || '%' end as 销售天数差异占比,
cc.当月26号到月底销售天数,
dd.当月1到25号销售天数,
ee.当月销售数量,
bb.往前推6个月平均销量,
case when nvl(ee.当月销售数量,0)=0 or nvl(bb.往前推6个月平均销量,0)=0  then null else
to_char(round((bb.往前推6个月平均销量-ee.当月销售数量)/ee.当月销售数量*100,3),'990.999') || '%' end as 销售数量差异占比

from aa
left join bb on aa.sellercode = bb.sellercode and aa.sellername = bb.sellername
left join cc on aa.sellercode = cc.sellercode and aa.sellername = cc.sellername
left join dd on aa.sellercode = dd.sellercode and aa.sellername = dd.sellername
left join ee on aa.sellercode = ee.sellercode and aa.sellername = ee.sellername
left join ff on aa.sellercode = ff.sellercode and aa.sellername = ff.sellername
</code></pre>
<h3 id="2issue和直连操作月底操作目前不用在手动发送">2.issue和直连操作（月底操作，目前不用在手动发送）</h3>
<p>地址：23.3</p>
<p>账号：bpotool</p>
<p>密码：oval163</p>
<p><strong>注意：最后语句 and 时间要做修改</strong></p>
<p>and a.createdate&gt;=to_date('2020-12-01 00:00:00','yyyy-mm-dd HH24:mi:ss')  -- 大于当月12月的 即本月</p>
<p>issue：</p>
<pre><code>SELECT 
 a.issuemanagetaskid as ID,
 a.resname as 负责人,
 p.projectcode as 项目代码,
 p.projectname as 项目名称,
 a.bucode as 药厂,
 a.dtcode as 经销商代码,
 a.dtname as 经销商名称,
 a.createdate as 创建日期,
 a.commbookingdate as 期望反馈日期,
 m.valuename as CMI沟通状态,
 d.valuename as 状态,
 c.valuename as 问题分类,
 --n.valuename as feedbackremark,
 a.specialitem as 原因备注,
 a.settledate as 预约跟进日期,
 a.directsup as 新老客户端,
 e.valuename as 紧急程度,
 a.problemdesc as 问题描述,
 a.dtresname as 经销商负责人,
 a.resphone as 联系电话,
 u.username as 上载人,
 a.executers as 完成人,
 a.stagestate as 分类状态,
 a.regionname as 省份,
 a.cmiresname as cmi负责人,
 a.datelastupdated as 完成时间
FROM issuemanagetask a ,projecttask p,dictionary d,dictionary c,dictionary e,dictionary m,dictionary n,usr u
WHERE 1=1 
  and d.type(+)='StatusIssue'
  and d.languagecode(+)='cn'
  and a.status=d.value(+)  
  and c.type(+)='QuestionClass'
  and c.languagecode(+)='cn'
  and a.questionclass=c.value(+)
  and e.type(+)='InterestDegree'
  and e.languagecode(+)='cn'
  and a.urgencylevel=e.value(+)
  and m.type(+)='StatusLinkup'
  and m.languagecode(+)='cn'
  and a.commstatus=m.value(+)
  and n.type(+)='FeedbackRemark'
  and n.languagecode(+)='cn'
  and a.feedbackremark=n.value(+) 
  and a.projecttaskid=p.projecttaskid  
  and a.maker=u.userid(+)
  and a.createdate&gt;=to_date('2020-12-01 00:00:00','yyyy-mm-dd HH24:mi:ss')
</code></pre>
<p>直连：</p>
<pre><code>SELECT 
  a.directtaskid as ID,
  a.resname as 负责人,
  c.projectcode as 项目代码,
  c.projectname as 项目名称,
  a.bucode as 药厂,
  b.regionname as 省份,
  b.cityname as 城市,
  a.dtcode as 经销商代码,
  a.dtname as 经销商名称,
  a.arrangedate as 安排日期,
  d.valuename as 状态,
  a.directdate as 预约安装日期,
  a.specialitem as 原因备注,
  e.valuename as 是否签署直连协议,
  b.ddidatapath as DDI直连数据查询路径,
  f.valuename as 直连方式,
  i.valuename as DDI直连方式,
  g.valuename as 直连方式明细,
  h.valuename as 总部直连,
  b.outbounddate as 出库日期开票日期,
  b.salesdate as DDI销售抓取时间点,
  b.purdate as DDI采购抓取时间点,
  b.invdate as DDI库存抓取时间点,
  b.businessres as 商务代表,
  b.businessphone as 商务电话,
  b.businessemail as 商务邮箱,
  l.valuename as 经销商级别,
  b.directres as 直连负责代表,
  b.hiscomparisonmon as 历史比对月数,
  a.dtresname as 联系人,
  a.resphone as 联系电话,
  a.executers as 完成人,
  a.datelastupdated  as 完成时间
FROM directtask a,ddirepositorydetail b,projecttask c,dictionary d,dictionary e,dictionary f,dictionary i,dictionary g,dictionary h,dictionary l
WHERE 1=1 
  and d.type(+)='StatusDirect'
  and d.languagecode(+)='cn'
  and a.status=d.value(+)
  and e.type(+)='YesOrNo'
  and e.languagecode(+)='cn'
  and b.isddiagreement=e.value(+)
  and f.type(+)='DirectLink'
  and f.languagecode(+)='cn'
  and b.directlink=f.value(+)
  and i.type(+)='DDIdirectLink'
  and i.languagecode(+)='cn'
  and b.ddidirectlink=i.value(+)
  and g.type(+)='DirectLinkDetail'
  and g.languagecode(+)='cn'
  and b.directlinkdetail=g.value(+)
  and h.type(+)='hqdirect'
  and h.languagecode(+)='cn'
  and b.hqdirect=h.value(+)
  and l.type(+)='DLMethod'
  and l.languagecode(+)='cn'
  and b.dealerlevel=l.value(+)
  AND a.directtaskid=b.directtaskid(+)  
  AND a.projecttaskid=c.projecttaskid    
  and c.status=41
  and a.createdate&gt;=to_date('2020-12-01 00:00:00','yyyy-mm-dd HH24:mi:ss')
  
</code></pre>
<h3 id="3系数维护数据添加">3.系数维护，数据添加</h3>
<p>地址：57.232</p>
<p>账户：dcph</p>
<p>密码：Hp678cd</p>
<p><strong>注意：发来的数据，要跟数据库中字段对应，依次执行插入确认</strong></p>
<p>（表格中数据第一列，插入一行，后边字段对照表中格式是否对应，sql中临时表插入第二步即可）</p>
<p><strong>注意提交事务。</strong></p>
<p><strong>注意:关注四个字段即可，经销商代码-产品代码-原始规格-原始单位</strong></p>
<pre><code>--先在第一列插入空白列 然后在价格原始规格中间插入空白列 剪切原始单位进去
delete from umtransform01    --第一步删除临时表数据
select * from umtransform01 for update --第二部将处理好的数据插入临时表
select * from umtransform u where exists (select 1 from umtransform01 u1 where u1.orgcode = u.orgcode --第三步查重
                 and u1.prodcode = u.prodcode
                 and u1.originalspec = u.originalspec
                 and u1.originalumname = u.originalumname)
                 
                 
update umtransform01 u01 set u01.prodid = (select p.prodid from product p where p.prodcode = u01.prodcode)  -- 第四步更新到两个正式表
update umtransform01 u01 set u01.orgid = (select oz.orgid from organization oz where oz.orgcode = u01.orgcode)
insert into umtransform select * from umtransform01  --最后执行插入
</code></pre>
<p><strong>问题反馈：</strong></p>
<p><strong>问题1</strong>：对方说明没有导出成功数据，根据数据查看数据库中是否有数据，有则已导入。（这次遇到的是对面没有给<strong>最小单位</strong>，对方导出不对，相应有的数据都要有除了品种可省略）</p>
<p>此步骤也可做为验证，临时表数据是否插入到正式表中。</p>
<pre><code>select * from umtransform u where u.orgcode = 'H871MH'   and u.prodcode = '228405' and u.originalspec = '50ml/瓶' and  u.originalumname = '盒'

</code></pre>
<p><strong>问题2</strong>: 接着上方问题继续，正式表中已经存在数据了，有列数据没有，对方重发数据，这边要重新添加操作，要先把正式表中刚才已添的数据删掉，再重新执行导入。</p>
<pre><code>delete from umtransform u where exists(select 1 from umtransform01 u1 where u1.orgcode = u.orgcode --
                 and u1.prodcode = u.prodcode
                 and u1.originalspec = u.originalspec
                 and u1.originalumname = u.originalumname)
</code></pre>
<h3 id="附加修改操作">附加：修改操作</h3>
<pre><code>/* 根据其orgcode 经销商代码，procode 产品代码，originalspec 原始规格，originalumname 原始单位
   去查找，然后根据提供的数据去对照修改一致即可，一般为修改价格 单位，但产品规格 转换系数等也要注意，最好依次对照保持正确性
*/
select * from umtransform u where u.orgcode ='H66151'   
and u.prodcode = '228237' and u.originalspec = '120丸*12瓶（大盒）' and  u.originalumname = '件'
for update
</code></pre>
<h3 id="4双引号对照处理-名称对照">4.双引号对照处理-名称对照</h3>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<p><strong>注意（两个字段的更改）：orgid是11，这时应该是替换掉11才对，for update更改其name，删除原始11的记录，并将更改后的记录status原来 80为198</strong></p>
<p>一步一步执行，避免后续出现问题。</p>
<p><strong>经销商代码</strong></p>
<pre><code>--对照双引号修改
// 通过查找经销商代码，获取到dtid
select * from organization o where o.orgcode = 'H633TY'--101182243
// 通过模糊查询客户名称和dtid，精确找到该经销商
// orgid大于100或者通过查找客户代码得到orgid，for update后直接锁当前数据，编辑即可（更改其name，并更改status为198）
select * from orgnamecollate om where om.orgname like '%莒南县人民医院%莒南县城天桥路156%' and om.dtid = 101182243
for update
</code></pre>
<h3 id="5每日必备每天巡检">5.每日必备（每天巡检）</h3>
<h4 id="1在18服务巡查4个文件夹">(1)在18服务巡查4个文件夹</h4>
<ol>
<li>
<p>先 连接到172.20.56.196</p>
</li>
<li>
<p>再连接172.21.0.18</p>
</li>
<li>
<p>巡查以下4个文件夹</p>
<p><strong>ALLFactoryDDIListen</strong>   检查该文件夹中文件是否正常  几十几百</p>
<p><strong>BusyPRDDDIDataFileListen</strong>  一般该文件夹为空</p>
<p><strong>PRDDDIDataFileListen</strong>  该文件夹中文件 主目录，文件数量</p>
<p><strong>PRDMSDDDIDataFileListen</strong>  文件是否正常被读取掉</p>
</li>
</ol>
<h4 id="2sql查看存储过程执行">(2)sql查看存储过程执行</h4>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<pre><code>// 查看存储过程执行开始结束时间，以及STATUS为END，如果在run需要注意
select * from procctrl pl order by pl.laststarttime desc

// 正在执行的存储过程，即正执行的功能
select * from v$db_object_cache where locks &gt; 0 and pins &gt; 0 and type='PROCEDURE';
</code></pre>
<h4 id="3索引检查">(3)索引检查</h4>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<pre><code>// 结果为空，如果有出来sql，再把下方sql执行
select 'alter index '||index_name||' rebuild online;' from user_indexes where status='UNUSABLE';
</code></pre>
<h4 id="4检查重名">(4)检查重名</h4>
<p>结果三个name，状态41 有效，28无效</p>
<pre><code>select u.employeename from usr u where u.status = 41 group by u.employeename having count(1)&gt;1 --检查重名
</code></pre>
<h4 id="518服务jmkx文件查看">(5)18服务jmkx文件查看</h4>
<p>查看log日志，error.log文件</p>
<h3 id="6日志内容学习">6.日志内容学习</h3>
<p>18服务，226都可</p>
<h4 id="1查看日志工具使用">(1)查看日志工具使用</h4>
<pre><code>// 测试数据库 log 举例，工具中file打开该文件连接后获取日志信息
D:\jboss-4.0.5.GA\server\stgportal\log 中的 dcms_workflow文件
</code></pre>
<h4 id="2logger工具结构sql查看">(2)logger工具，结构sql查看</h4>
<pre><code>// 先open object 打开config文件
D:\jboss-4.0.5.GA\server\stgportal\deploy\oval.war\WEB-INF 下的 config文件

// 然后通过seach 查询
// 一般常用 job，table，page
</code></pre>
<h3 id="7logger日志抓取sql">7.logger日志抓取sql</h3>
<p>连接59.196后再连接</p>
<p>地址：172.20.57.226</p>
<p>The  Whole SQL String=      -- 抓取其中sql到数据库中执行显示其数据是否有问题</p>
<h3 id="8进销存不平衡报告sql月初报告邮箱发送">8.进销存不平衡报告sql（月初报告，邮箱发送）</h3>
<p>数据库：57.227</p>
<p>账户：dcned</p>
<p>密码：Den6ydc5</p>
<p><strong>根据需求，选中导出为excel普通类型即可，导出为csv格式时产品代码前边0会省略。</strong></p>
<p>注意：to_date()时间要改变  to_date('2021-01-01','yyyy-mm-dd')</p>
<p>日期导出为上个月，例如2021-01-01，导出的为2020 12月的报告</p>
<pre><code>--进销存不平衡报告
  SELECT
a.inventoryimbalancedataid,a.userid,
 b.prodcode AS 产品代码,
  c.prdn AS 产品代码,
  a.province AS 省份,
  a.orgcode AS 经销商代码,
  a.orgname AS 经销商名称,
  a.salesman AS 代表名称,
   a.beginrealstock AS 期初库存,
   a.salesaqty AS SalesA,
    a.callinqty AS 调入,
  a.salesofmonthdata AS 销售,
  a.logicalstock AS 期末理论库存,
  a.realstock AS 期末实际库存,
  a.difference AS 差异,
  a.diffproportion AS 差异比例,
  a.lastluqtysum as 每月最后六天采购数据
 -- a.createdate

FROM inventoryimbalancedata a,
   product b,
   productlang c

WHERE 1=1
  and a.prodid= b.prodid
  and a.prodid=c.prodid
  --and a.year='2020'
  --and a.month='5'
  /*and a.year||lpad(a.month,2,0) &gt;=2014||lpad(7,2,0)
  and a.year||lpad(a.month, 2,0)&lt;=2014||lpad(7,2,0)  */
  and c.languagecode= 'cn'
  --order by a.createdate desc
/* and exists(select 1 from (select prodid from bumasterdetail bu,product p where bu.bumasterid = 100002280
       and bu.phamfactgorycode = p.phamfactgorycode and (bu.prodcode = p.prodcode or bu.prodcode is null)) prod
       where a.prodid=prod.prodid) */
and userid=100008067
and a.createdate&gt;=to_date('2021-01-01','yyyy-mm-dd')--本月存的是上月数据


-- 以下两步操作用于核查

-- 检查该用户id，根据相对应用户获取id
--select * from usr u where u.username = 'xuepengfei'--100008067

-- 根据id，获取数据信息，查看是否有数据
--select * from inventoryimbalancedata iv where iv.userid = 100008067 order by iv.createdate desc
</code></pre>
<h3 id="9黑名单维护月初邮箱回复">9.黑名单维护（月初，邮箱回复）</h3>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<p><strong>注意：日期字段</strong></p>
<pre><code>--黑名单维护
--select * from blacklist bl order by bl.createdate desc  --自检
 insert into blacklist (blacklistid ,bucode ,dtcode,dtname ,attr1 ) 
   select blacklistseq.nextval,bucode ,dtcode,dtname,'202101' from blacklist where attr1='202012' 
   -- 如上12月黑名单
</code></pre>
<h3 id="10跨省检查结果邮箱发送">10.跨省检查（结果邮箱发送）</h3>
<p>数据库：172.20.57.227</p>
<p>账号：unportal</p>
<p>密码: La1tropnu</p>
<pre><code>--跨省检查
-- dtcode,stdcode,custname三个字段，依次插入
select dtcode,buyercode,a.oricustomername from skipregion_enable a where 1=2 for update;

--查询表核实
select * from skipregion_enable s where s.dtcode='H669JN' and s.buyercode='H55114' 

</code></pre>
<h3 id="11删除产品对照id常用">11.删除产品对照id(常用)</h3>
<p>up 227正式</p>
<p>可做个动态sql</p>
<pre><code>--删除产品对照
delete from prodcollate p where p.prodcollateid in (100239259,
100283274,
100766600,
100800708,
101109977,
101453479
)
</code></pre>
<h3 id="12产品规格添加">12.产品规格添加</h3>
<p>dcph 232</p>
<p>--</p>
<p>172.21.0.19<br>
administrator<br>
[ddX@9X7</p>
<p>D盘 CAH-cfg-config-salesout-treechdaysale表中查出来着哪个表</p>
<p>销售类型，例如</p>
<p>treech，，从药厂门户定制报告-BJTRT Tech日报表查看处理报表为哪个 相对应</p>
<hr>
<pre><code>-- for update添加上产品记录即可
select * from producttrt
</code></pre>
<h3 id="13同仁堂商业级别维护-等级维护">13.同仁堂商业级别维护--等级维护+</h3>
<p>dcph</p>
<p>添加产品代码-名称-级别 即可</p>
<pre><code> insert into trtstorglevel values 
 (trtstorglevelseq.nextval,'H489KT','山西乐群医药有限公司','二级商')
</code></pre>
<pre><code>DCPH230 同仁堂一期等级维护添加sql
    添加客户代码 客户名字 创建时间
   insert into bjtrtsellerlist (ORGCODE, ORGNAME, CREATEDATE) values ('H258BQ ', '江西弘仁医药有限公司', to_date('22-07-2020', 'dd-mm-yyyy'))
</code></pre>
<h3 id="14当前月前5工作日进入系统文件动态sql">14.当前月前5工作日进入系统文件动态sql</h3>
<pre><code>--当前月前五工作日进入系统的文件查询
--文件类型 例:(SM,PM,SD,PD,ID)
--数据来源 例:(WEB,DD)
--药厂 例:(SPAS,CAH)
select sf.filename as 文件名,sf.createdate as 创建日期 from salesdatafile sf where sf.filename like 'SM%'||to_char(sysdate,'yyyyMM')||'%WEB%SPAS%' 
and trunc(sf.createdate)&lt;=  (select trunc(max(calendardate))  from (select * from bipmbusinesscalendar br where br.year = to_char(sysdate,'yyyy') and br.month = to_char(sysdate,'MM') and nvl(br.salesactivity,'Y') &lt;&gt; 'N' order by br.calendardate) where rownum &lt; 6)
and sf.filestatus not in (21,50)

-- 后边不要加order by
</code></pre>
<h3 id="15删除打单操作常用动态sql页面已添加">15.删除打单操作（常用，动态sql页面已添加）</h3>
<p>up 227</p>
<p><strong>gatherplandetail 打单表</strong></p>
<pre><code>--打单id查看是存在打单信息
--select * from gatherplandetail gp where gp.gatherplandetailid=100723369 
--删除打单
delete from gatherplandetail g where g.gatherplandetailid in(100723373,
100723369,
100723370,
100723371,
100723372,
100723374)
</code></pre>
<h3 id="16产品新增查看是否重复问题">16.产品新增查看是否重复问题</h3>
<p>up 227</p>
<p><strong>product 产品表</strong></p>
<pre><code>--查询产品是否存在 重复
select * from product pr where pr.prodcode in('224053',
'224054',
'224055'
)
</code></pre>
<h3 id="17新建药厂bu">17.新建药厂BU</h3>
<pre><code>--新建药厂步骤
-- 1
select * from joblocktemplate for update
select joblocktemplateseq.nextval from dual -- 100000320
-- 2
select joblockseq.nextval from dual --100000640
select * from joblock for update
-- 3 
select * from accesslist;
insert into accesslist (ACCESSLISTID, ACCESSTYPE, CREATEDATE, DATELASTUPDATED, USERID, ACCESSLISTCODE, ACCESSLISTNAME, WORKDAYLIMIT)
values (accesslistseq.nextval, 10, sysdate, sysdate, 1, 'TEVA', 'TEVA', 1);
-- 4
select * from bumaster bu order by bu.createdate desc

此处在统一门户中配置--基础数据---业务伙伴---DDI打单目录：
经销商目录配置：经销商代码 经销商名称
BU药厂配置：选择相应BU

最终数据清洗，原始文件处理后拆分，在统一门户--数据清洗----快速通道--药厂文件展示 产看日志以及是否拆分成功。也可从数据库中直接查看，sql参考 “统一门户”标签下sql查看。
即原始数据到拆分的过程处理

-- 5 时间窗口配置  calendar_teva_month  calendar_teva_day
（参考下方DDI时间窗口配置value）
门户页面--系统--期间管理--DDI时间窗口配置验证是否配置成功

-- 6 
SELECT *
FROM dictionary a  

WHERE 1=1    
	and a.languagecode='cn'   
	and a.type = 'PharmacyFactory'        
  for update
    
  select dictionaryseq.nextval from dual;--130016248
  
  -- 7
  --filename_pad_ddi 里防止重复的地方添加该药厂
  --即存储过程查看添加药厂
</code></pre>
<h6 id="ddi时间窗口">DDI时间窗口</h6>
<pre><code>表:calendarconfig

&lt;OPTION value=10&gt;月流向&lt;/OPTION&gt;
&lt;OPTION value=20&gt;月库存&lt;/OPTION&gt;
&lt;OPTION value=30&gt;月购进&lt;/OPTION&gt;
&lt;OPTION value=40&gt;周流向&lt;/OPTION&gt;
&lt;OPTION value=50&gt;周库存&lt;/OPTION&gt;
&lt;OPTION value=60&gt;周购进&lt;/OPTION&gt;
&lt;OPTION value=70&gt;日流向&lt;/OPTION&gt;
&lt;OPTION value=80&gt;日库存&lt;/OPTION&gt;
&lt;OPTION value=90&gt;日购进&lt;/OPTION&gt;
&lt;OPTION value=100&gt;半月流向&lt;/OPTION&gt;
&lt;OPTION value=110&gt;半月库存&lt;/OPTION&gt;
&lt;OPTION value=120&gt;半月购进&lt;/OPTION&gt;
</code></pre>
<h3 id="18期间主数据-日期-启用-关闭-未用-状态已添到22年暂时用不到">18.期间主数据--日期 启用-关闭-未用 状态(已添到22年，暂时用不到)</h3>
<p>处理中心 下的      基础数据--期间管理---期间主数据 目录，系统标准期间 查看</p>
<p>sql 如下：</p>
<pre><code> -- 查看该表，状态43 为启用
 select * from dcperioddetail WHERE 1=1  and status = 43
 -- 表中id 获取到后，查看此id为条件下的数据S
 select * from dcperioddetail dc where dc.datacleanperiodid = 1000 for update
</code></pre>
<h3 id="19流向归档问题-">19.流向归档问题  ---</h3>
<p>统一门户---数据采集--流向文档下载 查看</p>
<pre><code>主表:ORIGINALFLOWFILELIST

-- select * from orgdistributor o where o.orgcode ='HJ4694' --最好先核查 是否存在，然后再执行插入

-- 根据orgcode 找到其 orgid orgname regioncode 三个字段，根据这三个字段插入下方即可，其他不需要更改

select * from organization oz where oz.orgcode = 'HJ4694' --需要插入打单目录的数据从机构表里取


insert into orgdistributor (ORGDISTRIBUTORID, ORGID, ORGCODE, ORGNAME, REGIONCODE, PHONENUMBER, ELECTORNICUPLOAD, STATUS, COLLECTFRECUENCY, COLLECTDAYS, COLLECTTYPE, ADDDATE, PAUSEDATE, PAUSEREASON, CUSTOMERCODE, FEEDBACK, COMMENTS, CUSTOMERNAME, EMPLOYEENAME, CREATEDATE, DATELASTUPDATED, LASTMAKERUSERID, ORGCONTACT, ORGCONTACTPHONE, COLLECTDAYS2, INVENTORYUPLOAD, ORGRESPERSON, CMIRESPERSON, ORGADRESS, USERID, PHARMACEUTICAL, AREANAMEADD, AREAMANAGERADD)
values (orgdistributorseq.nextval, 106372779, 'HJ4694', '南京筑康医药有限公司', '320000', '1', 0, 1, 1, 1.00000, 1, null, null, null, null, null, null, null, '1', sysdate, sysdate, 1, null, null, 4.00000, 0, null, null, null, null, null, null, null);
</code></pre>
<h3 id="20打单目录变更-操作">20.打单目录变更 操作</h3>
<pre><code>-- 查询出负责人对应code
--select * from usr u where u.employeename = '王雅静'--449

-- gatherplandetail打单表
--select * from gatherplandetail gp where gp.gatherplandetailid = 100719809

   gatherpersion		上载人
   gatherpersioncode	上载人代码
   ovalemployeename		收集人
   employeecode			收集人代码
   dataperson			数据负责人
   datapersoncode		数据负责人代码
   
-- 具体更改根据提供 情况进行sql处理
--更改 上载人为 xxx，上载人代码为xxx，条件为 提供的表格中gatherplandetailid 即id
update gatherplandetail gp set gp.gatherpersion = '王雅静',gp.gatherpersioncode = '449' 
where gp.gatherplandetailid in (100719809,100717594,100717595)
-- 更改 收集人
update gatherplandetail gp set gp.ovalemployeename = '王雅静',gp.employeecode = '449' 
where gp.gatherplandetailid in (100719809,100717594,100717595)
--更改 数据负责人
update gatherplandetail gp set gp.dataperson = '王雅静',gp.datapersoncode = '449' 
where gp.gatherplandetailid in (100719809,100717594,100717595)

下方为查询确认 避免漏掉数据 select …… from table where …… in()  格式
--select  gp.ovalemployeename,gp.employeecode from gatherplandetail  gp
--select  gp.gatherpersion from gatherplandetail gp 
--select  gp.dataperson from gatherplandetail gp 
--where gp.gatherplandetailid in (100719809)
</code></pre>
<h3 id="21trt省市修改">21.trt省市修改</h3>
<p>处理中心  dcchc 57.227</p>
<pre><code>--trt省市修改

-- 通过条件 省 名称查询得到 code
select * from region r where r.regionname = '天津市'--120000
-- 通过条件 市 获取到 市 code    市县区 都在city表
select * from city c where c.cityname = '天津市'--440100 120100
-- 更改其客户省份 城市
select * from historyofdaysales hd where hd.historyofdaysalesid in (432637634)for update
</code></pre>
<p>然后到药厂门户查看是否正确 dcph</p>
<pre><code>select * from historyofsales_day hd where hd.historyofsalesid in (432642763)
</code></pre>
<h3 id="22adj报告每月第6工作日">22.ADJ报告(每月第6工作日)</h3>
<p>ADJ修改日期  <strong>每个月开始的第六个工作日</strong>发给Sang, Yu Ting<a href="mailto:yuting.sang@oval-tech.com">yuting.sang@oval-tech.com</a> （包含第六个工作日）</p>
<p><strong>注意：日期 期间</strong></p>
<pre><code>
   select a.SELLERPROVINCENAME as SELLERPROVINCENAME,
          a.SELLERCITYNAME as SELLERCITYNAME,
          a.sellercode,
          a.sellername,
          a.sellerrepname,
          buyercode,
          buyername,
          a.MAKER,
          a.prodcode,
          a.prodname,
          dcname,
          a.qty,
          --count(1) as aa,
          extract(year from SALESDATE) || '0' || extract(month from SALESDATE) as salesdate,
          a.sdtype,
          case
            when a.adjsign = 'n' then
             'Normal'
            else
             'ADJ'
          end as adj,
          case when a.recordtype='HIS' then 'T'
            when a.recordtype='DDI' then 'D'
              when a.recordtype='WEB' then 'W'
                when a.recordtype='MN' then 'U'
                  when a.recordtype='MOD' then 'M'
                    when a.recordtype='VIR' then 'V'
                      end as recordtype
     from Historyofsales_new@Dcph232 a
    where 1 = 1
      and a.adjsign &lt;&gt; 'n'
      and salesdate &gt;= to_date('2020-07-01', 'yyyy-MM-dd')
      and salesdate &lt; to_date('2020-08-01', 'yyyy-MM-dd')
      and a.dcname &lt;&gt; 'OTH'
      and a.dcname&lt;&gt;'BSL'
      and a.dcname&lt;&gt;'MSD'
      and a.dcname&lt;&gt;'BLG'
      --and a.VERSION &lt;&gt; '201301-20130217-170413MSD'
      and a.recordtype &lt;&gt; 'VIR'

   union all
   select a.SELLERPROVINCENAME as SELLERPROVINCENAME,
          a.SELLERCITYNAME as SELLERCITYNAME,
          a.sellercode,
          a.sellername,
          a.sellerrepname,
          buyercode,
          buyername,
          a.MAKER,
          a.prodcode,
          a.prodname,
          dcname,
          a.qty,
          --count(1) as aa,
          extract(year from SALESDATE) || '0' || extract(month from SALESDATE) as salesdate,
          a.sdtype,
          case
            when a.adjsign = 'n' then
             'Normal'
            else
             'ADJ'
          end as adj,
        --  '' as  'Normal',
          case when a.recordtype='HIS' then 'T'
            when a.recordtype='DDI' then 'D'
              when a.recordtype='WEB' then 'W'
                when a.recordtype='MN' then 'U'
                  when a.recordtype='MOD' then 'M'
                    when a.recordtype='VIR' then 'V'
                      end as recordtype/*count(1)*/
     from Historyofsales_new@Dcphmsd232 a
    where 1 = 1
      and a.adjsign &lt;&gt; 'n'

      and salesdate &gt;= to_date('2020-07-01', 'yyyy-MM-dd')
      and salesdate &lt; to_date('2020-08-01', 'yyyy-MM-dd')
      and a.dcname='MSD'
      and a.recordtype &lt;&gt; 'VIR'

   union all
   select a.SELLERPROVINCENAME as SELLERPROVINCENAME,
          a.SELLERCITYNAME as SELLERCITYNAME,
          a.sellercode,
          a.sellername,
          a.sellerrepname,
          buyercode,
          buyername,
          a.MAKER,
          a.prodcode,
          a.prodname,
          dcname,
          a.qty,
          --count(1) as aa,
          extract(year from SALESDATE) || '0' || extract(month from SALESDATE) as salesdate,
          a.sdtype,
          case
            when a.adjsign = 'n' then
             'Normal'
            else
             'ADJ'
          end as adj,
          case when a.recordtype='HIS' then 'T'
            when a.recordtype='DDI' then 'D'
              when a.recordtype='WEB' then 'W'
                when a.recordtype='MN' then 'U'
                  when a.recordtype='MOD' then 'M'
                    when a.recordtype='VIR' then 'V'
                      end as recordtype
     from Historyofsales_new@Dcphblg232 a
    where 1 = 1
      and a.adjsign &lt;&gt; 'n'
      and salesdate &gt;= to_date('2020-07-01', 'yyyy-MM-dd')
      and salesdate &lt; to_date('2020-08-01', 'yyyy-MM-dd')
      and a.dcname='BLG'
      and a.recordtype &lt;&gt; 'VIR'


   union all
   select a.SELLERPROVINCENAME as SELLERPROVINCENAME,
          a.SELLERCITYNAME as SELLERCITYNAME,
          a.sellercode,
          a.sellername,
          a.sellerrepname,
          buyercode,
          buyername,
          a.MAKER,
          a.prodcode,
          a.prodname,
          dcname,
          a.qty,
          --count(1) as aa,
          extract(year from SALESDATE) || '0' || extract(month from SALESDATE) as salesdate,
          a.sdtype,
          case
            when a.adjsign = 'n' then
             'Normal'
            else
             'ADJ'
          end as adj,
          case when a.recordtype='HIS' then 'T'
            when a.recordtype='DDI' then 'D'
              when a.recordtype='WEB' then 'W'
                when a.recordtype='MN' then 'U'
                  when a.recordtype='MOD' then 'M'
                    when a.recordtype='VIR' then 'V'
                      end as recordtype
     from Historyofsales_new@Dcphhsr232 a
    where 1 = 1
      and a.adjsign &lt;&gt; 'n'
      and salesdate &gt;= to_date('2020-07-01', 'yyyy-MM-dd')
      and salesdate &lt; to_date('2020-08-01', 'yyyy-MM-dd')
      and a.recordtype &lt;&gt; 'VIR'
</code></pre>
<h3 id="23对照删除">23.对照删除</h3>
<pre><code>--对照删除

-- 临时表
delete from org_temp	
--插入商业代码 orgcode
select * from org_temp for update 
--查找临时表中数据数量是否与excel中一致
select count(1) from org_temp 
--查找organization表，当临时表中code与之相同的 倒序查出
select o.orgid,o.orgcode from organization o,org_temp ot where o.orgcode = ot.orgcode order by o.orgcode desc 
-- 查出orgid，通过客户代码查出dtid 同样方式

delete from orgnamecollatetemp --临时表
--依次插入
select om.dtid,om.orgname,om.orgid from orgnamecollatetemp om for update
-- 查找确认
select count(1) from orgnamecollate om where exists(select 1 from orgnamecollatetemp ot where ot.dtid = om.dtid and ot.orgname = om.orgname and ot.orgid = om.orgid)--3857

create table orgnamecollate0222del as select * from orgnamecollate om where exists(select 1 from orgnamecollatetemp ot where ot.dtid = om.dtid and ot.orgname = om.orgname and ot.orgid = om.orgid)

select count(1) from orgnamecollate0222del--3857
delete from orgnamecollate om where exists(select 1 from orgnamecollate0222del om2 where om.orgnamecollateid = om2.orgnamecollateid)--3857

select * from orgnamecollate0222del

select count(1) from orgcodecollate oc where exists(select 1 from orgnamecollatetemp ot where ot.dtid = oc.dtid and ot.orgname = oc.orgcode and ot.orgid = oc.orgid)--3853
create table orgcodecollate0222del as select * from orgcodecollate oc where exists(select 1 from orgnamecollatetemp ot where ot.dtid = oc.dtid and ot.orgname = oc.orgcode and ot.orgid = oc.orgid)--3853
-- 删除
delete from orgcodecollate oc where exists (select 1 from orgcodecollate0222del oc2 where oc2.orgcodecollateid = oc.orgcodecollateid)

select * from orgcodecollate0222del
</code></pre>
<h3 id="24通过客户代码-找到与之对应的-县区-地址-oraganization表">24.通过客户代码 找到与之对应的 县区、地址 （oraganization表）</h3>
<p>organization 表，其中有经销商详细内容   字段</p>
<pre><code> --通过客户代码orgcode 找到相对应 县区、详细地址
 select o.orgcode as 客户代码 ,o.countyname as 县区 ,o.address as 地址 from organization o
where o.orgcode in ('H904DK','K72614','H3497C')
</code></pre>
<h3 id="25插入打单目录数据-即流向归档">25.插入打单目录数据 （即流向归档）</h3>
<pre><code>--select oz.regioncode from organization oz where oz.orgcode = 'H552RB' --需要插入打单目录的数据从机构表里取
-- 107492511  K07832  佛慈大药房连锁(兰州)有限责任公司  620000
--104917457   H457MF  甘肃陇中老百姓医药连锁有限公司  620000
--105180063  H552RB  青海金珠药业连锁有限公司
--630000

-- regioncode 地区代码
--先从organization获取到regioncode然后 插入 orgid orgcode orgname regioncode 四个字段内容

--select * from orgdistributor o order by o.createdate desc
 insert into orgdistributor(ORGDISTRIBUTORID,
                      ORGID,
                      ORGCODE,
                      ORGNAME,
                      REGIONCODE,
                      PHONENUMBER,
                      ELECTORNICUPLOAD,
                      STATUS,
                      COLLECTFRECUENCY,
                      COLLECTDAYS,
                      COLLECTTYPE,
                      ADDDATE,
                      PAUSEDATE,
                      PAUSEREASON,
                      CUSTOMERCODE,
                      FEEDBACK,
                      COMMENTS,
                      CUSTOMERNAME,
                      EMPLOYEENAME,
                      CREATEDATE,
                      DATELASTUPDATED,
                      LASTMAKERUSERID,
                      ORGCONTACT,
                      ORGCONTACTPHONE,
                      COLLECTDAYS2,
                      INVENTORYUPLOAD,
                      ORGRESPERSON,
                      CMIRESPERSON,
                      ORGADRESS,
                      USERID,
                      PHARMACEUTICAL,
                      AREANAMEADD,
                      AREAMANAGERADD) values(orgdistributorseq.nextval,
              105180063,	-- orgid 
              'H552RB',		-- orgcode
              '青海金珠药业连锁有限公司',	--orgname
              '630000',		--regioncode
              '1',
              0,
              1,
              1,
              1.00000,
              1,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              '1',
              sysdate,
              sysdate,
              1,
              null,
              null,
              4.00000,
              0,
              null,
              null,
              null,
              null,
              null,
              null,
              null);

</code></pre>
<h3 id="26月末打单维护月末操作最后一个工作日">26.月末打单维护（月末操作，最后一个工作日）</h3>
<p>第一步 检查打单：</p>
<pre><code>select * from gatherplandetail where yearmonth='201809' --yearmonth为新增打单日期--一般为下个月
</code></pre>
<p>第二步  更新打单表的cahorgcode</p>
<pre><code>update gatherplandetail a set  a.cahorgcode=
 (select o.orgcode from projectorg b,organization o where o.ovalorgcode=b.ovalorgcode and b.projectorgcode=a.dtcode and b.projectcode=a.projectcode and a.yearmonth='201809' and a.projectvalue=1 ) where a.yearmonth='201809' and a.projectvalue=1 and a.dtcode not in('700103')--yearmonth为新增打单日期
</code></pre>
<p>报错的话需查出问题，错误一般是三方表有问题，需一个个检查三方的明细，如三方检查无错误再检查其他表；三方表：projectorg 主数据表：organization</p>
<p>第三步 第二步执行不报错再执行</p>
<pre><code>update gatherplandetail a set a.cahorgcode=a.dtcode where a.cahorgcode is null
</code></pre>
<p>第四步 按照BPO所提需求拉取数据并提供给BPO</p>
<pre><code>SELECT
    distinct
  a.orgcode            AS 公司代码,
  a.orgname             AS 客户名称,    
  u.employeename        AS 代表名称,    
  d.employeename       AS CMI负责人
  FROM organization a, 
  usr   u,
 /*tmp20150430 b,*/--dtcode所在的表，需新建
 usr    d,
 gatherplandetail g
 WHERE 

  a.employeecode=u.employeecode(+)

 /* and a.orgcode=b.dtcode*/

  and a.cmiresperson=d.employeecode(+)

  /*and exists (select b.dtcode from tmp20150430 b)*/

  and a.orgcode=g.cahorgcode

  and g.yearmonth='201809' --yearmonth为新增打单日期
</code></pre>
<p>第五步 根据BPO提供EXcel数据，到数据库更新数据</p>
<ol>
<li>
<p>清空临时表</p>
<pre><code>truncate table tmp20150601 
</code></pre>
</li>
<li>
<p>将BPO提供的Excel表数据导入tmp20150601中，只需要公司代码(dtcode)、代表名称(name1)、CMI名称(name2)</p>
<pre><code> select * from tmp20150601 for update 
</code></pre>
</li>
<li>
<p>更新临时表</p>
<pre><code>update tmp20150601 a set employeecode=(select employeecode from usr b where a.name1=b.employeename and status=41)
   where exists(select 1 from usr b where a.name1=b.employeename and status=41);

   update tmp20150601 a set cmiresperson=(select employeecode from usr b where a.name2=b.employeename and status=41)
   where exists(select 1 from usr b where a.name2=b.employeename and status=41);

</code></pre>
</li>
<li>
<p>检验查有没为空</p>
<pre><code> select * from tmp20150601 where cmiresperson is null;

 select * from tmp20150601 where employeecode is null;

</code></pre>
</li>
<li>
<p>更新到正式环境（第4检查不到数据时再执行）</p>
<pre><code> update organization a set a.employeecode=(select b.employeecode from tmp20150601 b where a.orgcode=b.dtcode)where exists(select 1 from tmp20150601 b where a.orgcode=b.dtcode);

   update organization a set a.cmiresperson=(select b.cmiresperson from tmp20150601 b where a.orgcode=b.dtcode)where exists(select 1 from tmp20150601 b where a.orgcode=b.dtcode); 

</code></pre>
</li>
</ol>
<h3 id="27统一门户新增账户后开通中文账户权限操作">27.统一门户新增账户后，开通中文账户权限操作</h3>
<p>举例如下，usr 用户表，根据用户名 username 查找后，删除其 employeecode 中的值即可 即为空值</p>
<pre><code>select * from usr u where u.username ='panxixi'for update
</code></pre>
<h3 id="28统一门户cmi负责人变更">28.统一门户CMI负责人变更</h3>
<pre><code>-- 统一门户CMI商业负责人变更
--select *  from gatherplandetail g where g.gatherplandetailid =100729042

-- 先usr表中找到 employeename,employeecode 分别对应 gatherplandetail表中dataperson,datapersoncode
--select u.employeecode from usr u  where u.employeename = '杨燕'and u.status = 41 --10C 466  523



update gatherplandetail g
   set g.dataperson = '杨燕', g.datapersoncode = '523'
 where g.gatherplandetailid in (100729510,
                                100729516,
                                100729130,
                                100729517)
</code></pre>
<h3 id="29ddi直连管理表-内容-附直连管理job-table等更改后要重启服务生效">29.DDI直连管理表 内容 （附：直连管理job table等更改后要重启服务生效）</h3>
<p>常用表：</p>
<pre><code>select * from usr  --注意：adminflag 是否管理员  menuflag:是否全部权限 默认cmi看到cmi的，ddi看到ddi的。
select  *  from projecttask --项目管理表
select  *  from directtask --直连安装沟通表
select  *  from issuemanagetask --issue管理表
</code></pre>
<pre><code> select *  from directtask di where di.projecttaskid =1685 and di.orgcode='H2203J' 
 select  *  from projecttask p where p.projectname like '%欧%' --1945 baier  1685 OMRON
 select  *  from projecttask p where p.projectname like '%拜%' --1645
 
  select *  from directtask di where di.status = 10 
 select distinct di.status from directtask di
 select * from dictionary di where di.type='StatusDirect'
 
   select *  from directtask di where di.dtcode='BSC000001' --王轶宸
</code></pre>
<h3 id="30统一门户-客户对照-反写-问题-查看">30.统一门户 客户对照 反写 问题 查看</h3>
<p>前端页面目录为：基础数据--对照清理--客户别名修改</p>
<p>相对应表数据库中查看</p>
<pre><code>--select * from orgcodecollate org where org.status=10 
--update orgcodecollate org set org.status=80  where org.status=10 
 -- 之前数据状态10改为80 不反写之前数据
--select * from jobflowctrlseller --反写数据表     --delete from jobflowctrlseller
--select * from batchupdateoriginallock for update --状态改为80 结束反写，60执行中  1反写 2 导总帐
-- select * from orgcodecollate org where org.status=198  --- 行业库  状态198改为 80
-- 正在执行的存储  会话 insert 结束
</code></pre>
<h3 id="31申诉核查数据-feedbacktrack表">31.申诉核查数据 feedbacktrack表</h3>
<p>例如：上传数据错误，需要后台手动</p>
<pre><code> select * from feedbacktrack fd order by fd.createdate desc for update
</code></pre>
<h3 id="32打单更改收集人上载人">32.打单更改收集人上载人</h3>
<p>存储：update_gatherplandetailperson</p>
<h3 id="33知识库更新">33.知识库更新</h3>
<pre><code>create table ddirepositorydetail0430bak as select * from ddirepositorydetail --beifen
select count(1) from ddirepositorydetail0430bak
create table ddirepositorydetail0508bak as select * from ddirepositorydetail --beifen
select count(1) from ddirepositorydetail0508bak --16000

truncate  table ddirepositorydetail04
select * from ddirepositorydetail04 for update -- delete from ddirepositorydetail04
update ddirepositorydetail ddi set (

  ddi.firstarrangentdate ,--首次安装完成时间

  ddi.datelastupdated ,
  ddi.erpbrand ,--ERP品牌
  ddi.worktime ,--工作时间
  ddi.hqdirect ,
 ddi.ofdirectname ,--关联总公司名称
    ddi.directlink ,--直连方式
 ddi.dbdirectlink  ,--DB直连分类  
 ddi.hiscomparisonmon ,--客户端版本
  ddi.databasetype  ,--数据库类型
  ddi.productstandard,--产品筛选标准 
  ddi.nostandardproduct,--非标产品筛选条件 
  ddi.vinventorytype,--V库存类型 

  ddi.vinventoryupdate ,--V库存更新频率

  ddi.invdate ,--V库存更新时间
ddi.isinventorydate ,--是否提供库存时间字段
    ddi.spdataupdate  ,--S\P数据更新频率
  ddi.salesdate  ,--S\P数据更新时间
 ddi.isspecialtype ,--是否存在特殊业务类型
  ddi.specialtype , --特殊业务类型
  ddi.clientgettime , --客户端抓取时间点
  ddi.ftpfrequency ,--FTP传输时间
  ddi.webserviceupdatetime,--WebService更新时间
  ddi.directlinkexplain 
)=(
select  
 firstarrangentdate,--首次安装完成时间
  sysdate,
  erpbrand,--ERP品牌
  worktime,--工作时间
  case 
  hqdirect 
  when '是' then 1
  when '否' then 2  end ,--是否总分公司
  
  ofdirectname,--关联总公司名称
  
  case
  directlink 
  when  'FTP' then 1
  when 'DB直连' then 2
  when 'WebService' then 3 end ,--直连方式
  
  case
  dbdirectlink 
  when '专用视图'then 1
  when '综合试图'then 2
  when '表结构' then 3
  when '文件夹' then 4 end ,--DB直连分类  

  
  hiscomparisonmon ,--客户端版本
  
  case
  databasetype 
  when 'SQLServer' then 1
  when 'MySQL' then 2
  when 'Oracle'then 3
  when 'ODBC'then 4
  when '其他' then 5 end ,--数据库类型
  
  case
  productstandard 
  when '标准产地' then 1
  when '非标准产地' then 2 end ,--产品筛选标准 

  case
  nostandardproduct
  when '产品集合' then 1
  when  '流向卡号' then 2
  when '产品代码' then 3
  when '其他' then  4
  end,--非标产品筛选条件 

 case
  vinventorytype 
  when '实时库' then 1
  when '中间库' then 2
  when '历史'then 3
  end ,--V库存类型 

  case 
  vinventoryupdate 
  when '每天' then 1
  when '其他' then 2
  end ,--V库存更新频率
  
  invdate,--V库存更新时间
  
  case 
  isinventorydate
  when '是' then 1
  when '否' then 2
  end,--是否提供库存时间字段
  
  case
  spdataupdate
  when '每天' then 1
  when '其他' then  2
  end,--S\P数据更新频率
  
  salesdate,--S\P数据更新时间
  
  case
  isspecialtype
  when '是' then 1
  when '否' then 2
  end,--是否存在特殊业务类型
  
  specialtype, --特殊业务类型
  clientgettime, --客户端抓取时间点
  ftpfrequency,--FTP传输时间
   webserviceupdatetime,--WebService更新时间
   directlinkexplain --特例直连规则说明


 from  ddirepositorydetail04 ddi04
  where ddi04.ddirepositorydetailid=ddi.ddirepositorydetailid

) where exists(select 1 from ddirepositorydetail04 d4 where d4.ddirepositorydetailid=ddi.ddirepositorydetailid)
&lt;!-- more --&gt;


select * from ddirepositorydetail ddi where ddi.ddirepositorydetailid=20365  --29167
select * from directtask di where di.directtaskid=29435

</code></pre>
<h3 id="34客户管理添加权限">34.客户管理添加权限</h3>
<p>参考   “月末打单维护” 最后步骤，最终organization表中添加负责人即可。</p>
<h3 id="35biib渤健推送如果报违反唯一约束错误执行以下语句">35.BIIB渤健推送如果报违反唯一约束错误，执行以下语句</h3>
<p>采购存储参考：IMPORTTO——PHMSD</p>
<pre><code>update organization@biibcmi o1 set o1.orgid = (select orgid from organization o where o.orgname = o1.orgname and o.orgid&lt;&gt;o1.orgid)
where exists (select 1 from organization o where o.orgname = o1.orgname and o.orgid&lt;&gt;o1.orgid)
</code></pre>
<h3 id="36-更改业务大区">36 .更改业务大区</h3>
<p>dchp</p>
<pre><code>-- select * from customerareabak0616 for update 是2021-06-16之前的业务大区模板

select * from customerarea for update
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[工作交接文档]]></title>
        <id>https://honlya.github.io/post/gong-zuo-jiao-jie-wen-dang/</id>
        <link href="https://honlya.github.io/post/gong-zuo-jiao-jie-wen-dang/">
        </link>
        <updated>2022-08-01T01:57:27.000Z</updated>
        <content type="html"><![CDATA[<h2 id="交接文档">交接文档</h2>
<h4 id="邮箱">邮箱</h4>
<p>scolin-g@luxondata.com<br>
LDsu1807121!</p>
<p>SuT7qV_9bx</p>
<p>SuYm8{V9h8</p>
<p>jing.guo@oval-tech.com</p>
<p>Hungry456</p>
<p>Hungry456?</p>
<h4 id="直连平台">直连平台</h4>
<h6 id="基本信息">基本信息：</h6>
<ol>
<li>
<p>应用服务器地址，账号及密码</p>
<p>地址：172.20.23.9    账号及密码：Administrator / Mcxhq$7x</p>
</li>
<li>
<p>数据库服务器地址，账号及密码</p>
<p>地址：172.20.23.3   账号及密码：bpotool/oval163</p>
<p>测试:   172.20.23.3   账号密码: bpotooldev/oval163</p>
</li>
<li>
<p>程序访问地址，账号及密码</p>
<p>正式环境：http://idc.oval-tech.com:7070/oval/BPOTool.jsp  ，账号及密码：ovaladmin/oval163  diaoadmin/oval163<br>
测试环境: http://idc.oval-tech.com:8079/oval/BPOTool.jsp  ，账号及密码：ovaladmin/oval163</p>
<p>4.远程跳板机 172.20.56.196  账号 guojing 密码 Wa55K8:p</p>
<p>vpn:  guojing  Wa55K8:p</p>
<p>5.18超管密码  Lxd@@898     电脑本机超管密码 Lxdpc-admin</p>
<p>6.172.20.23.39   guojing   hungry456  /  Administrator   8KgJ057T</p>
<p>7.18<br>
guojing<br>
%GT4npav   hungry456</p>
<p>226<br>
guojing<br>
3z&lt;s(O9G</p>
<p>228<br>
guojing<br>
4)9cnGJk</p>
</li>
</ol>
<h6 id="常用表">常用表：</h6>
<pre><code>select * from usr  --注意：adminflag 是否管理员  menuflag:是否全部权限 默认cmi看到cmi的，ddi看到ddi的。
select  *  from projecttask --项目管理表
select  *  from directtask --直连安装沟通表
select  *  from issuemanagetask --issue管理表
</code></pre>
<h6 id="状态">状态:</h6>
<OPTION value=0>未开始</OPTION>
<OPTION value=1>安装完成</OPTION>
<OPTION value=2>安装失败</OPTION>
<OPTION selected value=3>进行中</OPTION>
<OPTION value=4>无效</OPTION>
<OPTION value=28>重新沟通</OPTION>
<OPTION value=41>取消直连</OPTION>
<h6 id="导出语句">导出语句:</h6>
<ul>
<li></li>
</ul>
<pre><code>页面导出不了,可以重启23.9的报表服务和bpotool服务,查看表空间.
-----------------------------------------issue----------------------------------------------------------
SELECT 
 a.issuemanagetaskid as ID,
 a.resname as 负责人,
 p.projectcode as 项目代码,
 p.projectname as 项目名称,
 a.bucode as 药厂,
 a.dtcode as 经销商代码,
 a.dtname as 经销商名称,
 a.createdate as 创建日期,
 a.commbookingdate as 期望反馈日期,
 m.valuename as CMI沟通状态,
 d.valuename as 状态,
 c.valuename as 问题分类,
 --n.valuename as feedbackremark,
 a.specialitem as 原因备注,
 a.settledate as 预约跟进日期,
 a.directsup as 新老客户端,
 e.valuename as 紧急程度,
 a.problemdesc as 问题描述,
 a.dtresname as 经销商负责人,
 a.resphone as 联系电话,
 u.username as 上载人,
 a.executers as 完成人,
 a.stagestate as 分类状态,
 a.regionname as 省份,
 a.cmiresname as cmi负责人,
 a.datelastupdated as 完成时间
FROM issuemanagetask a ,projecttask p,dictionary d,dictionary c,dictionary e,dictionary m,dictionary n,usr u
WHERE 1=1 
  and d.type(+)='StatusIssue'
  and d.languagecode(+)='cn'
  and a.status=d.value(+)  
  and c.type(+)='QuestionClass'
  and c.languagecode(+)='cn'
  and a.questionclass=c.value(+)
  and e.type(+)='InterestDegree'
  and e.languagecode(+)='cn'
  and a.urgencylevel=e.value(+)
  and m.type(+)='StatusLinkup'
  and m.languagecode(+)='cn'
  and a.commstatus=m.value(+)
  and n.type(+)='FeedbackRemark'
  and n.languagecode(+)='cn'
  and a.feedbackremark=n.value(+) 
  and a.projecttaskid=p.projecttaskid  
  and a.maker=u.userid(+)

---------------------------------------------直连---------------------------------------------------------

SELECT 
  a.directtaskid as ID,
  a.resname as 负责人,
  c.projectcode as 项目代码,
  c.projectname as 项目名称,
  a.bucode as 药厂,
  b.regionname as 省份,
  b.cityname as 城市,
  a.dtcode as 经销商代码,
  a.dtname as 经销商名称,
  a.arrangedate as 安排日期,
  d.valuename as 状态,
  a.directdate as 预约安装日期,
  a.specialitem as 原因备注,
  e.valuename as 是否签署直连协议,
  b.ddidatapath as DDI直连数据查询路径,
  f.valuename as 直连方式,
  i.valuename as DDI直连方式,
  g.valuename as 直连方式明细,
  h.valuename as 总部直连,
  b.outbounddate as 出库日期开票日期,
  b.salesdate as DDI销售抓取时间点,
  b.purdate as DDI采购抓取时间点,
  b.invdate as DDI库存抓取时间点,
  b.businessres as 商务代表,
  b.businessphone as 商务电话,
  b.businessemail as 商务邮箱,
  l.valuename as 经销商级别,
  b.directres as 直连负责代表,
  b.hiscomparisonmon as 历史比对月数,
  a.dtresname as 联系人,
  a.resphone as 联系电话,
  a.executers as 完成人,
  a.datelastupdated  as 完成时间
FROM directtask a,ddirepositorydetail b,projecttask c,dictionary d,dictionary e,dictionary f,dictionary i,dictionary g,dictionary h,dictionary l
WHERE 1=1 
  and d.type(+)='StatusDirect'
  and d.languagecode(+)='cn'
  and a.status=d.value(+)
  and e.type(+)='YesOrNo'
  and e.languagecode(+)='cn'
  and b.isddiagreement=e.value(+)
  and f.type(+)='DirectLink'
  and f.languagecode(+)='cn'
  and b.directlink=f.value(+)
  and i.type(+)='DDIdirectLink'
  and i.languagecode(+)='cn'
  and b.ddidirectlink=i.value(+)
  and g.type(+)='DirectLinkDetail'
  and g.languagecode(+)='cn'
  and b.directlinkdetail=g.value(+)
  and h.type(+)='hqdirect'
  and h.languagecode(+)='cn'
  and b.hqdirect=h.value(+)
  and l.type(+)='DLMethod'
  and l.languagecode(+)='cn'
  and b.dealerlevel=l.value(+)
  AND a.directtaskid=b.directtaskid(+)  
  AND a.projecttaskid=c.projecttaskid    
  and c.status=41
</code></pre>
<p>上载报500检查C盘是否满了。</p>
<h4 id="统一门户">统一门户</h4>
<h6 id="基本信息-2">基本信息：</h6>
<ol>
<li>
<p>账号密码</p>
<pre><code>unportal : La1tropnu  
stgportal : Latrop0gts 
dcmsd : Dsm6ycd4
dcchc : Chc2cd80
dcjmkx : Xkmj3cd7
dcblg : Glb2cd09
dcned : Den6ydc5
dcbsl : Lsb1cd08
dcoth : Hto6ydc6
dcphmnln21 : Nlnm9hpcd   (232)
stgmsd : Dsm6ygts
ovalmdm : Mdm6lavo
dcmaster ：Rets7amcd
ovalmdm(行业库)/Mdm6lavo 
综合药厂门户：
172.20.57.232:1521:DCMS
dcph/Hp678cd
UCB药厂门户：172.20.57.232:1521:DCMS
user=dcph
password=Hp678cd

凯西:
http://210.51.21.33:8050/oval
admin  oval1234

18服务器：administrator/Lxd@@898
		 engnieer/5tgbYHN

172.20.57.4
niemei
5?)$df=2
		 
stgjmkx/Xkmj8gts		 
STGMASTER/Retsam5gts
STGCHC/Chcx0gts
STGPH/oval163
STGMSD/Dsm6ygts
STGNED/Den5xgts
STGOTH/Hto0ygts
STGPORTAL/Latrop0gts
STGBSL/Lsb0xgts
STGPHBSL/oval163
STGBLG/Glb0xgts

开启控制台密码:ecp   http://www.pharm-hub.com.cn/oval/console/main.jsp
</code></pre>
</li>
<li>
<p>地址：</p>
<p>正式：http://www.pharm-hub.com.cn/oval/</p>
<p>测试：http://www.pharm-hub.com.cn:9081/oval/</p>
<p>luxon1   luxon1234</p>
<p>guojing   luxon123</p>
<p>3.新搭建的测试环境</p>
<p>门户测试环境：<br>
172.20.23.18</p>
<p>administrator/Oval163</p>
<p>数据库信息：<br>
172.20.57.231<br>
unportal/cah123<br>
dcchc/cah123</p>
<p>ovalmdm/cah123</p>
<p>unportal统一门户<br>
http://210.51.21.33:20080/oval</p>
<p>chcprd数据处理中心<br>
http://210.51.21.33:26788/oval</p>
<p>Ovalmdmprd行业库<br>
http://210.51.21.33:28090/oval</p>
</li>
</ol>
<h6 id="kpi">KPI</h6>
<ol>
<li>ADJ的数据明细</li>
<li>dcph</li>
</ol>
<h6 id="ned进销存不平衡报表">NED进销存不平衡报表</h6>
<pre><code>SELECT
a.inventoryimbalancedataid,a.userid,
 b.prodcode AS 产品代码,
  c.prdn AS 产品代码,
  a.province AS 省份,
  a.orgcode AS 经销商代码,
  a.orgname AS 经销商名称,
  a.salesman AS 代表名称,
   a.beginrealstock AS 期初库存,
   a.salesaqty AS SalesA,

a.callinqty AS 调入,

  a.salesofmonthdata AS 销售,
  a.logicalstock AS 期末理论库存,
  a.realstock AS 期末实际库存,
  a.difference AS 差异,
  a.diffproportion AS 差异比例
  --a.lastluqtysum as 每月最后六天采购数据

FROM inventoryimbalancedata a,
   product b,
   productlang c

WHERE 1=1
  and a.prodid= b.prodid
  and a.prodid=c.prodid
  and a.year='2019'
  and a.month='4'
  /*and a.year||lpad(a.month,2,0) &gt;=2014||lpad(7,2,0)
  and a.year||lpad(a.month, 2,0)&lt;=2014||lpad(7,2,0)  */
  and c.languagecode= 'cn'
/* and exists(select 1 from (select prodid from bumasterdetail bu,product p where bu.bumasterid = 100002280

   and bu.phamfactgorycode = p.phamfactgorycode and (bu.prodcode = p.prodcode or bu.prodcode is null)) prod
   where a.prodid=prod.prodid) */

and userid=100010222--'zhengyifeng'
and a.createdate&gt;=to_date('2019-05-13','yyyy-mm-dd')

--select * from usr u where u.username = 'zhengyifeng'
</code></pre>
<h6 id="ddi时间窗口">DDI时间窗口</h6>
<pre><code>表:calendarconfig

&lt;OPTION value=10&gt;月流向&lt;/OPTION&gt;
&lt;OPTION value=20&gt;月库存&lt;/OPTION&gt;
&lt;OPTION value=30&gt;月购进&lt;/OPTION&gt;
&lt;OPTION value=40&gt;周流向&lt;/OPTION&gt;
&lt;OPTION value=50&gt;周库存&lt;/OPTION&gt;
&lt;OPTION value=60&gt;周购进&lt;/OPTION&gt;
&lt;OPTION value=70&gt;日流向&lt;/OPTION&gt;
&lt;OPTION value=80&gt;日库存&lt;/OPTION&gt;
&lt;OPTION value=90&gt;日购进&lt;/OPTION&gt;
&lt;OPTION value=100&gt;半月流向&lt;/OPTION&gt;
&lt;OPTION value=110&gt;半月库存&lt;/OPTION&gt;
&lt;OPTION value=120&gt;半月购进&lt;/OPTION&gt;
</code></pre>
<h6 id="基线检查">基线检查</h6>
<ol>
<li>
<p>工作要求：三四五工作日</p>
<p>提供 PFM，UCB_importation,UCB_domestic,SPAS,Invida五个BU的数据，PFM，UCB_importation,UCB_domestic一起提供，SPAS和Invida分别提供</p>
</li>
<li>
<p>操作步骤：</p>
<p>SPAS和Invida</p>
<p>第一步 选择需要跑基线的BU</p>
<pre><code>select * from baselinelist for update
</code></pre>
<p>第二步 执行存储</p>
<pre><code>update_zxjpmonthmonitoring(v_message,'N','Y','');

辅助sql：查询存储执行状态
select * from runbaselinelog order by id desc;

</code></pre>
<p>第三步 查询结果</p>
<pre><code>select baselinemanagementplanid,yearmonth,bucode,ORGCODE 经销商代码 ,ORGNAME 经销商名称 , round(QTY,0) 数量 , round(AVGQTY,0) 平均数量, round(DIFFQTY,0) 数量差异,  DIFFRATIOQTY 占比,NUMDAYS 日期个数,  AVGNUMDAYS 平均日期个数,  LINE 行数,  AVGLINE    平均行数,  PRODNUM 产品个数,  AVGPRODNUM 平均产品个数 ,LASTCUSTOMERNUM 上月客户个数,  CUSTOMERNUM 本月客户个数,  MINSALESDATE 最小日期个数,  MAXSALESDATE 最大日期个数, PRIORITY 级别 ,BASELINETYPE 技术检查结果分类,  BASELINETYPEDETAIL 技术检查结果明细,ATTR2 销量趋势,  ATTR1 产品差异明细  ,GATHERSTATUS,  GATHERSREMARK  ,OVALEMPLOYEENAME from baselinemanagementplan 
</code></pre>
<p>PFM，UCB_importation和UCB_domestic</p>
<p>第一步：创建临时表(数据库正常已存在该临时表，只在数据库不存在临时表时候创建)</p>
<pre><code>create table baselinemanagementplan_0508 as (select baselinemanagementplanid,yearmonth,bucode,
ORGCODE 经销商代码 ,ORGNAME 经销商名称 , round(QTY,0) 数量 , round(AVGQTY,0) 平均数量, round(DIFFQTY,0) 数量差异,  DIFFRATIOQTY 占比,NUMDAYS 日期个数,  AVGNUMDAYS 平均日期个数,  LINE 行数,  AVGLINE    平均行数,  PRODNUM 产品个数,  AVGPRODNUM 平均产品个数 ,LASTCUSTOMERNUM 上月客户个数,  CUSTOMERNUM 本月客户个数,  MINSALESDATE 最小日期个数,  MAXSALESDATE 最大日期个数, PRIORITY 级别 ,BASELINETYPE 技术检查结果分类,  BASELINETYPEDETAIL 技术检查结果明细,ATTR2 销量趋势,  ATTR1 产品差异明细  ,GATHERSTATUS,  GATHERSREMARK  ,OVALEMPLOYEENAME from baselinemanagementplan);

</code></pre>
<p>第二步 清空临时表</p>
<pre><code>truncate table baselinemanagementplan_0508;
</code></pre>
<p>第三步 选择需要跑基线的BU</p>
<pre><code>select * from baselinelist for update;
</code></pre>
<p>第四步 执行存储</p>
<pre><code>update_zxjpmonthmonitoring(v_message,'N','Y','');

辅助：查询存储执行状态
select * from runbaselinelog order by id desc 

</code></pre>
<p>第五步 将结果插入临时表</p>
<pre><code>insert into baselinemanagementplan_0508 (select baselinemanagementplanid,yearmonth,bucode,

ORGCODE 经销商代码 ,ORGNAME 经销商名称 , round(QTY,0) 数量 , round(AVGQTY,0) 平均数量, round(DIFFQTY,0) 数量差异,  DIFFRATIOQTY 占比,

NUMDAYS 日期个数,  AVGNUMDAYS 平均日期个数,  LINE 行数,  AVGLINE    平均行数,  PRODNUM 产品个数,  AVGPRODNUM 平均产品个数 ,

LASTCUSTOMERNUM 上月客户个数,  CUSTOMERNUM 本月客户个数,  MINSALESDATE 最小日期个数,  MAXSALESDATE 最大日期个数, PRIORITY 级别 ,

BASELINETYPE 技术检查结果分类,  BASELINETYPEDETAIL 技术检查结果明细,

ATTR2 销量趋势,  ATTR1 产品差异明细  ,GATHERSTATUS,  GATHERSREMARK  ,OVALEMPLOYEENAME 

from baselinemanagementplan);

</code></pre>
<p>第六步 查询并导出临时表数据</p>
<pre><code>select * from baselinemanagementplan_0508
</code></pre>
</li>
</ol>
<h6 id="月末维护">月末维护</h6>
<p>最后一个工作日维护</p>
<ol>
<li>
<p>黑名单维护</p>
<pre><code> insert into blacklist (blacklistid ,bucode ,dtcode,dtname ,attr1 ) 
   select blacklistseq.nextval,bucode ,dtcode,dtname,'201703' from blacklist where attr1='201702'  
   --如过没有邮件不用改，有邮件按照邮件改日期

</code></pre>
</li>
<li>
<p>常规打单维护</p>
<p>第一步 检查打单：</p>
<pre><code>select * from gatherplandetail where yearmonth='201809' --yearmonth为新增打单日期--一般为下个月
</code></pre>
<p>第二步  更新打单表的cahorgcode</p>
<pre><code>update gatherplandetail a set  a.cahorgcode=
 (select o.orgcode from projectorg b,organization o where o.ovalorgcode=b.ovalorgcode and b.projectorgcode=a.dtcode and b.projectcode=a.projectcode and a.yearmonth='201809' and a.projectvalue=1 ) where a.yearmonth='201809' and a.projectvalue=1 and a.dtcode not in('700103')--yearmonth为新增打单日期
</code></pre>
<p>报错的话需查出问题，错误一般是三方表有问题，需一个个检查三方的明细，如三方检查无错误再检查其他表；三方表：projectorg 主数据表：organization</p>
<p>第三步 第二步执行不报错再执行</p>
<pre><code>update gatherplandetail a set a.cahorgcode=a.dtcode where a.cahorgcode is null
</code></pre>
<p>第四步 按照BPO所提需求拉取数据并提供给BPO</p>
<pre><code>SELECT
    distinct
  a.orgcode            AS 公司代码,
  a.orgname             AS 客户名称,    
  u.employeename        AS 代表名称,    
  d.employeename       AS CMI负责人
  FROM organization a, 
  usr   u,
 /*tmp20150430 b,*/--dtcode所在的表，需新建
 usr    d,
 gatherplandetail g
 WHERE 

  a.employeecode=u.employeecode(+)

 /* and a.orgcode=b.dtcode*/

  and a.cmiresperson=d.employeecode(+)

  /*and exists (select b.dtcode from tmp20150430 b)*/

  and a.orgcode=g.cahorgcode

  and g.yearmonth='201809' --yearmonth为新增打单日期
</code></pre>
<p>第五步 根据BPO提供EXcel数据，到数据库更新数据</p>
<ol>
<li>
<p>清空临时表</p>
<pre><code>truncate table tmp20150601 
</code></pre>
</li>
<li>
<p>将BPO提供的Excel表数据导入tmp20150601中，只需要公司代码(dtcode)、代表名称(name1)、CMI名称(name2)</p>
<pre><code> select * from tmp20150601 for update 
</code></pre>
</li>
<li>
<p>更新临时表</p>
<pre><code>update tmp20150601 a set employeecode=(select employeecode from usr b where a.name1=b.employeename and status=41)
   where exists(select 1 from usr b where a.name1=b.employeename and status=41);

   update tmp20150601 a set cmiresperson=(select employeecode from usr b where a.name2=b.employeename and status=41)
   where exists(select 1 from usr b where a.name2=b.employeename and status=41);

</code></pre>
</li>
<li>
<p>检验查有没为空</p>
<pre><code> select * from tmp20150601 where cmiresperson is null;

 select * from tmp20150601 where employeecode is null;

</code></pre>
</li>
<li>
<p>更新到正式环境（第4检查不到数据时再执行）</p>
<pre><code> update organization a set a.employeecode=(select b.employeecode from tmp20150601 b where a.orgcode=b.dtcode)where exists(select 1 from tmp20150601 b where a.orgcode=b.dtcode);

   update organization a set a.cmiresperson=(select b.cmiresperson from tmp20150601 b where a.orgcode=b.dtcode)where exists(select 1 from tmp20150601 b where a.orgcode=b.dtcode); 

</code></pre>
</li>
</ol>
</li>
</ol>
<h6 id="对照和打单日常维护">对照和打单日常维护</h6>
<ol>
<li>
<p>对照</p>
<p>产品对照表：prodcollate</p>
<p>客户对照表:  orgcodecollate, orgnamecollate</p>
</li>
<li>
<p>打单</p>
<p>(打单目录管理)表:orgdistributor</p>
<p>(DDI打单目录)表:accesslist4org a,organization b关联a.orgid=b.orgid   and a.accesslistid = 11</p>
<p>(CMI收集进度管理)表：gatherplandetail  上载的存储 P_SCHEDULEMANAGEMENT</p>
<pre><code> select g.gatherplandetailid,
  g.gatherpersion,
      g.gatherpersioncode,
      g.ovalemployeename,
      g.employeecode,
      g.dataperson,
      g.datapersoncode
 from gatherplandetail g
where g.gatherplandetailid in (100435470)
  --for update;

   gatherpersion            上载人
   gatherpersioncode	 上载人代码
   ovalemployeename 	 收集人
   employeecode 		 收集人代码
   dataperson		 数据负责人
   datapersoncode		 数据负责人代码
   
   
   
select projectvalue,
  employeecode,
  ovalemployeename,
  yearmonth,
  sum(planqty) as planqty,
  sum(nvl(yidaoqty,
  0)) as yidaoqty,
  sum(nvl(noqty,
  0)) as noqty,
  sum(nvl(weidaoqty,
  0)) as weidaoqty,
  sum(nvl(delayqty,
  0)) as delayqty,
  sum(nvl(isupload,
  0)) as isupload,
  sum(nvl(yidaonupload,
  0)) as yidaonupload,
  sum(nvl(nosales,
  0)) as nosales,
  sum(nvl(datacollection,
  0)) as datacollection 

from (    
select g.projectvalue,
  g.ovalemployeename,
  g.employeecode,
  g.yearmonth,
  count(1) as planqty,
  case when gatherstatus=1 then count(1)  end as yidaoqty,
  case when gatherstatus=2 then count(1) end as weidaoqty,
  case when gatherstatus=3 then count(1) end as noqty,
  case when gatherstatus=4 then count(1) end as delayqty,
  case when gatherstatus=8 then count(1) end as isupload,
   case when gatherstatus=9 then count(1) end as yidaonupload,
  case when gatherstatus=5 then count(1) end as nosales,
  case when gatherstatus=6 then count(1) end as datacollection 

from gatherplandetail g   

WHERE 1=1   
  and g.projectvalue=1   
  and g.yearmonth='201909'            

GROUP BY  g.ovalemployeename,
  g.employeecode,
  gatherstatus,
  g.yearmonth,
  g.projectvalue      
  
  
  select g.projectcode from gatherplandetail g where g.projectvalue = 1 group by g.projectcode
  select * from gatherplandetail g where g.projectcode = 'Shire' order by g.yearmonth desc--CAH--Shire
  

select a.remark,
	a.gatherplandetailid as ID,
	 nvl(o.orgcode,
	a.dtcode) as CAH编码,
	 a.bucode as 药厂,
	 a.dtcode as 经销商代码,
	 a.dtname as 经销商名称,
	 a.gatherreauest,
	 a.gatherdate,
	 a.grade as 级别,
	 a.gatherstatus,
	 a.invgatherstatus,
	 a.noreason,
	 a.comments,
	 a.customertype,
	 a.mergedt,
	 a.ovalemployeename,
	 a.purgatherstatus,
	a.invnoreason,
	a.isgatherinv,
	a.purnoreason 

from gatherplandetail a ,
	 organization o,
	 projectorg p   

WHERE 1=1   
	--and a.gatherstatus=2   
	and a.projectvalue=1                        
	--and a.employeecode='336'   
	--and a.yearmonth ='201905'   
	and a.dtcode=p.projectorgcode(+)   
	--and p.projectcode(+) in('XJP',
	--'SGB')   
	and o.ovalorgcode(+)=p.ovalorgcode         
	--and ovalemployeename='姚璐宇' 
	--and 'Y'='Y'                

 --------------------------------------导出数据 
  select 
  --a.gatherplandetailid as ID,
  distinct
  a.yearmonth as 年月,
   nvl(o.orgcode,
  a.dtcode) as CAH编码,
   a.bucode as 药厂,
   a.dtcode as 经销商代码,
   a.dtname as 经销商名称,
   a.isgatherinv as 库存重点收集,
   a.gatherreauest as 收集时间要求,
   a.remark as 总部反馈,
   a.grade as 级别,
   a.gatherdate as 计划采集日期,
   
   case when a.gatherstatus = 1 then '已采集' 
     when a.gatherstatus = 2  then '未采集'
        when a.gatherstatus = 3  then '收不到'
           when a.gatherstatus = 5  then '无销量'
              when a.gatherstatus = 6  then '合并收集'
   end as 销售收集状态,
   
   case when a.invgatherstatus = 1 then '已采集' 
     when a.invgatherstatus = 2  then '未采集'
        when a.invgatherstatus = 3  then '收不到'
              when a.invgatherstatus = 6  then '合并收集'
                when a.invgatherstatus = 7  then '无库存'
                  when a.invgatherstatus = 8  then '已上载'
   end as 库存收集状态,
   
     case when a.purgatherstatus = 1 then '已采集' 
     when a.purgatherstatus = 2  then '未采集'
        when a.purgatherstatus = 3  then '收不到'
              when a.purgatherstatus = 6  then '合并收集'
                when a.purgatherstatus = 8  then '已上载'
                  when a.purgatherstatus = 11  then '无采购'
   end as 采购收集状态,

case when a.noreason = 1 then '商业代表反馈无合作，拒绝提供' 
      when a.noreason = 2  then '经销商反馈无合作，拒绝提供'
        when a.noreason = 3  then '未签协议，拒绝提供'
           when a.noreason = 4  then '经销商不配合'
              when a.noreason = 6 then '无销售'
                 when a.noreason = 7  then '商业在做GSP认证，暂无法提供流向'
                   when a.noreason = 8  then '经销商停业/倒闭/并购'
                     when a.noreason = 9  then '合并收集商业'
                        when a.noreason = 10  then '非协议客户，要费用'
                           when a.noreason = 11  then '协议客户要求费用'
                              when a.noreason = 12  then '经销商换系统/网站故障'
                                 when a.noreason = 13  then '季度打单'
                                    when a.noreason = 14  then '挂靠商业'
                                      when a.noreason = 20  then '不在以上分类中，详见备注'

   end as 销售收不到原因,
   
   case when a.invnoreason = 1 then '商业代表反馈无合作，拒绝提供' 
      when a.invnoreason = 2  then '经销商反馈无合作，拒绝提供'
        when a.invnoreason = 3  then '未签协议，拒绝提供'
           when a.invnoreason = 4  then '经销商不配合'
              when a.invnoreason = 6 then '无销售'
                 when a.invnoreason = 7  then '商业在做GSP认证，暂无法提供流向'
                   when a.invnoreason = 8  then '经销商停业/倒闭/并购'
                     when a.invnoreason = 9  then '合并收集商业'
                        when a.invnoreason = 10  then '非协议客户，要费用'
                           when a.invnoreason = 11  then '协议客户要求费用'
                              when a.invnoreason = 12  then '经销商换系统/网站故障'
                                 when a.invnoreason = 13  then '季度打单'
                                    when a.invnoreason = 14  then '挂靠商业'
                                      when a.invnoreason = 20  then '不在以上分类中，详见备注'

   end as 库存收不到原因,
   
   case when a.purnoreason = 1 then '商业代表反馈无合作，拒绝提供' 
      when a.purnoreason = 2  then '经销商反馈无合作，拒绝提供'
        when a.purnoreason = 3  then '未签协议，拒绝提供'
           when a.purnoreason = 4  then '经销商不配合'
              when a.purnoreason = 6 then '无销售'
                 when a.purnoreason = 7  then '商业在做GSP认证，暂无法提供流向'
                   when a.purnoreason = 8  then '经销商停业/倒闭/并购'
                     when a.purnoreason = 9  then '合并收集商业'
                        when a.purnoreason = 10  then '非协议客户，要费用'
                           when a.purnoreason = 11  then '协议客户要求费用'
                              when a.purnoreason = 12  then '经销商换系统/网站故障'
                                 when a.purnoreason = 13  then '季度打单'
                                    when a.purnoreason = 14  then '挂靠商业'
                                      when a.purnoreason = 20  then '不在以上分类中，详见备注'

   end as 采购收不到原因,
   
  -- a.invnoreason as 库存收不到原因,
  -- a.purnoreason as 采购收不到原因,
   a.comments as 备注,
   a.customertype as 客户类别,
   a.mergedt as 合并商业,
   a.ovalemployeename as 收集人,
   a.gatherpersion as 上载人,
   a.dataperson as 数据负责人

from gatherplandetail a ,
   organization o,
   projectorg p   

WHERE 1=1   
  --and a.gatherstatus=2   
  and a.projectvalue=1                        
  --and a.employeecode='336'   
  --and a.yearmonth ='201905'   
  and a.dtcode=p.projectorgcode(+)   
  --and p.projectcode(+) in('XJP',
  --'SGB')   
  and o.ovalorgcode(+)=p.ovalorgcode         
  --and ovalemployeename='姚璐宇' 
  and 'Y'='Y'
  and a.yearmonth &lt;&gt; '2452-03-27'
  and a.yearmonth &lt;&gt; '无需收集-201409'           
  order by a.yearmonth desc
</code></pre>
</li>
</ol>
<h6 id="索引检查">索引检查</h6>
<p>每天检查一次，查不到为正常。查到通知ITO关闭unportal，修复索引后，通知ITO重启unportal</p>
<pre><code>select 'alter index '||index_name||' rebuild online;' from user_indexes where status='UNUSABLE';
</code></pre>
<h6 id="动态sql">动态SQL</h6>
<pre><code>insert into ESQLCONFIG t (ESQLCONFIGID,seqno,sqlname,sqltitle,status,sqldesc,groupcode,sqltype,ESQL_01,p1text,p2text) values 
(ESQLCONFIGSEQ.nextval,ESQLCONFIGSEQ.nextval,'Z17_BT数据导出','Z17_BT数据导出','41','Z17_BT数据导出','Z17_BT数据导出','PRINT','要执行的sql','销售开始日期:yyyy-MM-dd','销售结束日期:yyyy-MM-dd'

)
</code></pre>
<h6 id="文件查看">文件查看</h6>
<pre><code>通过如下的SQL查看明细表是否有数据，如果有则在继续
select * from inventorydatafile s where s.filename like '%H539W9_临沂市天一医药有限公司_20180919_DD_TRT%' 
2.如果查不到记录再在ddidatafiledetail中查找，
select * from ddidatafiledetail  s where s.filename like 'ID%H539W9_临沂市天一医药有限公司_20180919_DD_TRT%' 
3.判断ddidatafiledetail中有记录，inventorydatafile中无记录，则去ddidatafileactionlog查看，如果也正常
select * from ddidatafileactionlog c where c.datafiledetailid=109945606
4.去18服务器上的Linsern文件夹下相应处理中心文件夹下查看是否卡住，是的话就去找ITO重启服务器，并将文件名前有~~符号的~~号去除

5.还有种可能是因为索引导致，然后文件有可能因为索引错误导致文件进入D:\DDIlog\TRT\BackupError\文件夹下，要重新将文件放到D:\PRDDDIDataFileListen对应的处理中心文件夹下
</code></pre>
<h6 id="文件各表关系">文件各表关系</h6>
<table>
<thead>
<tr>
<th>月流向</th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>统一门户</td>
<td>使用salesdatafileid</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>表名</td>
<td>字段</td>
<td>对应字段来源</td>
<td>处理顺序</td>
<td></td>
</tr>
<tr>
<td>salesdatafile</td>
<td>salesdatafileid</td>
<td>salesdatafile中的salesdatafileid</td>
<td>12</td>
<td></td>
</tr>
<tr>
<td>originalsalesdata</td>
<td>salesdatafileid</td>
<td>salesdatafile中的salesdatafileid</td>
<td>9</td>
<td></td>
</tr>
<tr>
<td>datafiledetail</td>
<td>datafiledetailid</td>
<td>salesdatafile中的reffileid</td>
<td>10</td>
<td></td>
</tr>
<tr>
<td>datafile</td>
<td>datafileid</td>
<td>datafiledetail中的datafileid</td>
<td>13</td>
<td></td>
</tr>
<tr>
<td>datafileactionlog</td>
<td>datafiledetailid</td>
<td>salesdatafile中的reffileid</td>
<td>11</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>处理中心</td>
<td>使用datafiledetailid</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>表名</td>
<td>字段</td>
<td>对应字段来源</td>
<td></td>
<td></td>
</tr>
<tr>
<td>datafiledetail</td>
<td>cahdatafiledetailid</td>
<td>统一门户中的datafiledetailid</td>
<td>7</td>
<td></td>
</tr>
<tr>
<td>salesdatafile</td>
<td>reffileid</td>
<td>datafiledetail中的datafiledetailid</td>
<td>6</td>
<td></td>
</tr>
<tr>
<td>originalsalesdata</td>
<td>salesdatafileid</td>
<td>salesdatafile中的salesdatafileid</td>
<td>4</td>
<td></td>
</tr>
<tr>
<td>datafile</td>
<td>datafileid</td>
<td>datafiledetail中的datafileid</td>
<td>8</td>
<td></td>
</tr>
<tr>
<td>datafileactionlog</td>
<td>datafiledetailid</td>
<td>salesdatafile中的reffileid</td>
<td>5</td>
<td></td>
</tr>
<tr>
<td>originalsalesdata_flow</td>
<td>salesdatafileid</td>
<td>salesdatafile中的salesdatafileid</td>
<td>3</td>
<td></td>
</tr>
<tr>
<td>historyofmonthsales</td>
<td>salesdatafileid</td>
<td>salesdatafile中的salesdatafileid</td>
<td>2</td>
<td></td>
</tr>
<tr>
<td>historyofsales</td>
<td>salesdatafileid</td>
<td>salesdatafile中的salesdatafileid</td>
<td>1</td>
<td></td>
</tr>
</tbody>
</table>
<p>​    historyofsales                           chaoriid                      门户originalsales中的ID</p>
<h6 id="客户反写相关">客户反写相关</h6>
<p>1.反写步骤</p>
<pre><code>import_orgcollate(上载)
batchcustomercollate--&gt;collatechange_effectflow--&gt;d_calldatacentre--&gt;循环处理中心dccall_dmtrigger--&gt;dccall_datamodify
</code></pre>
<p>2.解除反写</p>
<pre><code>Update batchupdateoriginallock
   set status   = '80',
   enddate  = sysdate,
   maker    = '1',
   comments = 'Success Is True!'
 where BATCHUPDATEORIGINALLOCKID = '100'
</code></pre>
<p>3.反写期间</p>
<pre><code>表collateeffectconfig 字段说明datetype=L指要往前计算N个月, monthnum=3 指往前推3个月；datetype=C指的是只反写当年的数据，monthnum一般默认为12个月
</code></pre>
<p>4.反写常用表</p>
<pre><code>orgcodecollate(代码对照表),orgnamecollate(名称对照表),

batchnolog(批次日志表),collateeffectmain(执行的反写期间日志表),

batchupdateoriginal(流向临时表,由于执行中会清空,查询详细的流向可以到batchupdateoriginal_bak中根据deatilid去总账分类账中查chaoriid)

collateeffectdata(要处理的流向表,数据是从originalsales里复制过来的)

COLLATEEFFECTMAPPING(触发规则的对照清单：上载的对照清单中，如果涉及到了某个规则，就把与该规则相关的对照变更记录于此，等待人工执行时使用这个规则。)
</code></pre>
<p>5.报违反唯一约束错误,清空表</p>
<pre><code>delete from jobflowctrlseller 反复出现这个问题可以查看orgcodecollate和orgnamecollate里是否有状态为10的.
</code></pre>
<p>6.相关状态</p>
<pre><code>198,10是要待处理的,80是已经处理完的,遇到反写异常不知道哪条数据问题可以分批去处理

select 'C',t.status,t.batchno,t.orgcodecollateid,t.orgcode,t.orgname,t.orgid,t.dtid from orgcodecollate t 
 where t.status in(198,10)
union all
select 'N',t.status,t.batchno,t.orgnamecollateid,t.orgcode,t.orgname,t.orgid,t.dtid from orgnamecollate t 
 where t.status in(198,10)

--delete
--select * 
 from jobflowctrlseller

update orgcodecollate t set status=200 where t.status in(198,10);
update orgnamecollate t  set status=200 where t.status in(198,10)

update orgcodecollate set status=198 where status=200 and rownum&lt;501
</code></pre>
<p>反写不到把originalsalesdata里的customerid清空</p>
<h6 id="产品反写相关">产品反写相关</h6>
<p>1.相关JOB</p>
<p>j_productflowpop(查询流向),j_productflowall(全部修改)</p>
<p>2.相关SQL</p>
<pre><code>查询流向
vtable   v_customersalesflowpop

SELECT a.originalsalesdataid AS originalsalesdataid,
   a.dtname AS dtname,
   a.salesdate AS salesdate,
   a.customer AS customer,
   a.prodcode AS prodcode,
   a.prodname AS prodname,
   a.qty AS qty,
   a.umname AS umname,
   b.orgcode AS dtcode,
   a.dtid AS dtid,
   b.orgid AS orgid,
   e.phamfactgorycode AS phamfactgorycode,
   f.phamfactgorycode AS phamfactgorycode1,
   f.phamfactgoryname AS phamfactgoryname,
   a.deleteflag AS deleteflag,
   '' AS frecuencydate1,
   '' AS frecuencydate2,
   b.regioncode AS regioncode,
   c.regioncode AS regioncode1,
   c.regionname AS regionname,
   b.citycode AS citycode,
   d.citycode AS citycode1,
   d.cityname AS cityname,
   d.languagecode AS languagecode,
   c.languagecode AS languagecode1,
   a.isdistribute AS isdistribute,
   a.customercode AS customercode,
   a.prodid AS prodid,
   e.prodid AS prodid1,
   a.customerid AS customerid,
   a.datacentre AS datacentre,
   a.spec AS spec
  FROM originalsalesdata a,
   organization      b,
   product           e,
   phamfactory       f,
   region            c,
   city              d
 WHERE 1 = 1
   AND a.dtid = b.orgid
   AND e.phamfactgorycode = f.phamfactgorycode
   AND b.regioncode = c.regioncode
   AND b.citycode = d.citycode
   AND c.languagecode = d.languagecode
   AND a.prodid = e.prodid
   and a.salesdate &gt;=
   to_date('2018-08-01 00:00:00', 'yyyy-mm-dd hh24:mi:ss')
   and a.salesdate &lt;
   to_date('2019-01-01 00:00:00', 'yyyy-mm-dd hh24:mi:ss') + 1
   and b.orgcode = '0010I9'
   and a.deleteflag is null
   and d.languagecode = 'cn'
   and a.isdistribute = 'Y'
   and a.prodid &lt;&gt; 100089067
   and (('13549' = '-' and nvl(a.prodname, '-') = '西黄丸' and 
   nvl(a.spec, '-') = '3gX10瓶' and nvl(a.prodcode, '-') = '-') --如果对照中原始代码为空，查流向里原始产品名称和原始规格并且流向原始代码必须为空
   or
   ('13549' &lt;&gt; '-' and a.prodcode = '13549' and
   nvl(a.prodcode, '-') &lt;&gt; '-'))--如果对照中原始代码不为空，直接查流向原始代码为这个的数据。
   
   执行反写
   insert into upproddistribute
  (upproddistributeid, detailid, processtype, userid, originalid)
  select upproddistributeseq.nextval,
         datafiledetailid,
         10,
         100009862,
         originalsalesdataid
    from (select o.datafiledetailid, originalsalesdataid
            from originalsalesdata o
           where o.originalsalesdataid in
                 (359081355, 366824021, 371569062, 371096871)) 
        --(通常报500错误是因为这里插入的数据比较多,可以日期范围选小点查出再执行反写,要小于1000个)

</code></pre>
<h6 id="数据推送的存储">数据推送的存储</h6>
<pre><code>1.月销售月库存 importtophcp ,importtophcpseller(指定经销商)
2.日库存 importtophcpinv (现逻辑已更改为跟月库存推送逻辑一致)
3.日销售日采购 importto_ph_day
4.月采购 importto_phmsd
</code></pre>
<h6 id="查询正在跑的存储">查询正在跑的存储</h6>
<pre><code>select * from v$db_object_cache where locks &gt; 0 and pins &gt; 0 and type='PROCEDURE';
</code></pre>
<h6 id="自补相关">自补相关</h6>
<p>1.查询还剩多少要补</p>
<pre><code>select min(ddidatafiledetailid),count(1)
  from ddidatafiledetail a
  where a.createdate&gt;sysdate-3 and a.filename like 'S_%'
  --and a.createdate&lt;sysdate-1/24 -- 如果是定时任务则启用这个条件，如果在应用中直接调用则不用该条件
  and a.supplementflag='N' and a.datatype = 'S' and a.status=20
  --and totalqty&lt;10000
  --and a.ddidatafiledetailid  in(111386704,111387829)
  --and a.customerid&lt;&gt;100063030
  and exists(select 1 from salesdatafile b where b.createdate&gt;sysdate-3
          and b.datatype='D'
          and (b.filestatus in(10,19,40) or (b.filestatus=49 and b.totalqty=0) )
          and a.customerid=b.sellerorgid   and a.receivedate=b.receivedate)
  and a.customerid in(select orgid from accesslist4org a,accesslist b
                  where a.accesslistid=b.accesslistid
                  and b.accesslistcode in(select column_value from table(get_string_tab('TRTTE'))))
  and a.projectcode in(select column_value from table(get_string_tab('TRTTE')));
</code></pre>
<p>2.查看补了多少</p>
<pre><code>select * from datafile d where d.filename like '%TRTTE_ALL自补%'and d.createdate&gt;sysdate-1
</code></pre>
<p>3.自补重复</p>
<pre><code>1.看是否自补在前拆分的文件在排队。

2.是否原始文件就多条相同数据.
</code></pre>
<p>4.DSCN自补定时任务</p>
<p>544，644 ，964，1084,1085,1086</p>
<h6 id="页面部分按钮点击没反应">页面部分按钮点击没反应</h6>
<pre><code>报无法获取未定义或 null 引用的属性“dataType” 一般是IE兼容性导致的,用F12里仿真模式把级别调到11就可以
</code></pre>
<h6 id="锁表及表空间查看">锁表及表空间查看</h6>
<pre><code>------------查看锁表-----------

SELECT object_name, machine, s.sid, s.serial# 
FROM gv$locked_object l, dba_objects o, gv$session s 
WHERE l.object_id　= o.object_id 
AND l.session_id = s.sid; 

------------杀掉进程-----------

alter system kill session '411, 49524'; 

--查看当前用户表空间

select username,default_tablespace from user_users;

--查看表空间使用率
select a.tablespace_name as &quot;表空间名&quot;,
       a.bytes / 1024 / 1024 as &quot;表空间大小(M)&quot;,
       (a.bytes - b.bytes) / 1024 / 1024 as &quot;已使用空间(M)&quot;,
       b.bytes / 1024 / 1024 &quot;空闲空间(M)&quot;,
       round(((a.bytes - b.bytes) / a.bytes) * 100, 2) &quot;使用比&quot;
  from (select tablespace_name, sum(bytes) bytes
          from dba_data_files
         group by tablespace_name) a,
       (select tablespace_name, sum(bytes) bytes, max(bytes) largest
          from dba_free_space
         group by tablespace_name) b
 where a.tablespace_name = b.tablespace_name
 order by ((a.bytes - b.bytes) / a.bytes) desc;
</code></pre>
<h6 id="新建bupfm">新建BU(PFM)</h6>
<pre><code>1.在AllFactoryDDIListen,DDIlog下建立PFM目录

2.insert into joblocktemplate (TEMPLATENUM, SALESCOLSNAME, SALESCOLSTYPE, PURCOLSNAME, PURCOLSTYPE, INVCOLSNAME, INVCOLSTYPE, PROJECTCODEBAK)
values (109, 'SALESDATE,MANUFACTURER,CUSTOMERCODE,CUSTOMER,PRODCODE,PRODNAME,SPEC,UMNAME,BUNCHNO,QTY,PRICE,AMOUNTDDI,BUSINESSTYPE,ORDERCODE', 'date,,,,,,,,,,,,,', 'PURCHASEDATE,MANUFACTURER,VENDORCODE,VENDOR,PRODCODE,PRODNAME,SPEC,UMNAME,BUNCHNO,QTY,PRICE,AMOUNTDDI,BUSINESSTYPE,EXPIRYDATE,ORDERCODE,OTHER1,OTHER2,PRODFACTORYADDRESS,SPDACODE', 'date,,,,,,,,,,,,,,,,,,', 'INVDATE,MANUFACTURER,PRODCODE,PRODNAME,SPEC,UMNAME,BUNCHNO,QTY,PRICE,AMOUNT,INVENTORYSTYPE,EXPIRYDATE,PRODFACTORYADDRESS,SPDACODE', 'date,,,,,,,,,,,,,,,', 'PFM');
(templatenum对应JOBLOCK里的templatenum)
3.insert into JOBLOCK (JOBLOCKID, JOBNAME, STARTDATE, ENDDATE, LOCKFLAG, TEMPDIC, LOADFILE, BAKERROR, BAKSUCCESS, PROJECTCODE, DATASTARTLINE, MAXHANDLEFILENUM, STATUS, FREQUENCYTYPES, REMOVEDATATYPE, TEMPLATENUM, DATASOURCE, LOADDATATYPE, REMOVEKEYWORD)
values (52, 'j_listenFile', to_date('27-05-2019 11:16:29', 'dd-mm-yyyy hh24:mi:ss'), to_date('27-05-2019 11:16:29', 'dd-mm-yyyy hh24:mi:ss'), 0, 'D:\\DDIlog\\PFM\\Log', 'D:\\AllFactoryDDIListen\\PFM', 'D:\\DDIlog\\PFM\\BackupError', 'D:\\DDIlog\\PFM\\BackupSuccess', 'PFM', 1, 5, 41, 'DM', 'MI', 109, null, null, null);

4.insert into accesslist (ACCESSLISTID, ACCESSTYPE, CREATEDATE, DATELASTUPDATED, USERID, ACCESSLISTCODE, ACCESSLISTNAME, WORKDAYLIMIT)
values (21, 10, to_date('27-05-2019 13:02:15', 'dd-mm-yyyy hh24:mi:ss'), to_date('27-05-2019 13:02:15', 'dd-mm-yyyy hh24:mi:ss'), 1, 'PFM', 'PFM', 1);

 insert into accesslist (ACCESSLISTID, ACCESSTYPE, CREATEDATE, DATELASTUPDATED, USERID, ACCESSLISTCODE, ACCESSLISTNAME, WORKDAYLIMIT)
values (accesslistseq.nextval, 10, sysdate, sysdate, 1, 'SHCB', 'SHCB', 1);

bumaster表更新对应处理中心和上级BU

--如果BPO药厂产品分类配置那里添加产品有报重复就看添加的是不是已经有了.

5.DDI打单在PFM下添加对应经销商.

6.给PFM添加DDI月时间窗口:把calendar_PFM_month里subtype对应的插入值改成10,20,30分别执行一次.
7.字典表添加药厂
SELECT *
FROM dictionary a  

WHERE 1=1    
	and a.languagecode='cn'   
	and a.type = 'PharmacyFactory'        
  for update
  
 8.filename_pad_ddi 里防止重复的地方添加该药厂
 9.如果是NED的还需要看下库存导入总账存储限制BU那里添加下。
 10.如果要建三方关系还需要在行业库添加该药厂
    SELECT *
FROM dictionary a  
WHERE 1=1    
	and a.languagecode='cn'
	and a.type = 'ProjectCode'        
  for update
</code></pre>
<h6 id="导入正式表报无法将null插入recordtype">导入正式表报无法将NULL插入recordtype</h6>
<pre><code>一般是文件名有问题,系统逻辑截取文件名的第五段来case,截出来没有符合的选项就会报这个错.
</code></pre>
<h6 id="报ora-01031权限不足处理方法">报ORA-01031权限不足处理方法</h6>
<pre><code>在存储过程中有些时候用户会没有相关权限(PL/SQL工具中可以),给账号赋予相关权限.

如: GRANT SELECT ANY TABLE TO DCCHC

1、赋予用户创建视图的权限：GRANT CREATE VIEW TO USER
2、赋予可以查询任何表的权限：GRANT SELECT ANY TABLE TO USER
3、赋予可以查询任何字典的权限：GRANT SELECT ANY DICTIONARY TO USER
4  赋予任何主机访问数据的权限: grant all privileges to cssy
</code></pre>
<h6 id="计算销售行为">计算销售行为</h6>
<pre><code>如果执行很慢,可以问BPO选择的哪个BU,在saletype_analyze存储里for c2 循环语句中加入BU限制条件

如     and exists(select 1 from buproduct b where b.buname = '229_TRTST' and a.prodcode=b.prodcode) 
</code></pre>
<h6 id="lzfc未构建三方">LZFC未构建三方</h6>
<pre><code>SELECT SELLERCODE,
   SELLERNAME,
   SELLERPROVINCENAME,
   SELLERCITYNAME,
   SELLERCOUNTYNAME,
   orgcode,
   orgname,
   ovalorgcode,
   BUYERPROVINCENAME,
   BUYERCITYNAME,
   BUYERCOUNTYNAME,
   BUYERCHANNEL3NAME,
   ORIGINALCUSTNAME,
   ORIGINALCUSTCODE
  FROM (SELECT a.SELLERCODE,
           a.SELLERNAME,
           a.SELLERPROVINCENAME,
           a.SELLERCITYNAME,
           a.SELLERCOUNTYNAME,
           b.orgcode,
           b.orgname,
           b.ovalorgcode,
           a.BUYERPROVINCENAME,
           a.BUYERCITYNAME,
           a.BUYERCOUNTYNAME,
           a.BUYERCHANNEL3NAME,
           a.ORIGINALCUSTNAME,
           a.ORIGINALCUSTCODE
      FROM historyofsales a, organization b
     WHERE a.buyerid = b.orgid
       AND a.salesdate &gt;= TO_DATE('2019-06', 'yyyy-mm')
       AND a.salesdate &lt; ADD_MONTHS(TO_DATE('2019-06', 'yyyy-mm'), 1)
       AND EXISTS (SELECT 1
              FROM productgroupmap b
             WHERE a.prodid = b.productid
               AND b.productgroupid =
                   (SELECT p.productgroupid
                      FROM productgroup p
                     WHERE p.productgroupcode = 'LZFC'))
       AND NOT EXISTS (SELECT 1
              FROM historyofsales c
             WHERE a.datafromid = c.historyofsalesid
               AND c.version IS NULL
               AND a.datafromid = a.datatouchid
               AND a.datatouchid &lt;&gt; -1)
       AND NOT EXISTS (SELECT 1
              FROM historyofsales c
             WHERE c.datafromid = c.datatouchid
               AND c.datatouchid &lt;&gt; -1
               AND a.historyofsalesid = c.datafromid
               AND a.version IS NULL)
       AND a.isdelete &lt;&gt; 'L'
       AND a.buyerid &gt; 100
       AND NOT EXISTS (SELECT 1
              FROM projectorg g
             WHERE b.ovalorgcode = g.ovalorgcode
               AND g.projectcode = 'LZFC')
       AND a.version IS NULL
       --AND a.CREATEDATE &gt;= to_date('2019-07-04','yyyy-MM-dd hh24:mi:ss')
       --AND a.CREATEDATE &lt;= to_date('2019-07-04 00:00:00','yyyy-MM-dd hh24:mi:ss')
     GROUP BY a.SELLERCODE,
              a.SELLERNAME,
              a.SELLERPROVINCENAME,
              a.SELLERCITYNAME,
              a.SELLERCOUNTYNAME,
              b.orgcode,
              b.orgname,
              b.ovalorgcode,
              a.BUYERPROVINCENAME,
              a.BUYERCITYNAME,
              a.BUYERCOUNTYNAME,
              a.BUYERCHANNEL3NAME,
              a.ORIGINALCUSTNAME,
              a.ORIGINALCUSTCODE
              );
</code></pre>
<h6 id="更新xml没效果">更新XML没效果</h6>
<pre><code>先检查代码有没有问题,正式测试有没有弄反了,仔细确认没问题把JBOSS缓存清了再把当前修改的备份文件删掉,重启.
</code></pre>
<h6 id="流向归档问题">流向归档问题</h6>
<pre><code>上载没反应查看flash和浏览器问题.

上载成功在表里可以查到数据但是页面查不到一般是打单目录表里没配置这家商业

主表:ORIGINALFLOWFILELIST

select * from organization oz where oz.orgcode = 'HJ4694' --需要插入打单目录的数据从机构表里取
insert into orgdistributor (ORGDISTRIBUTORID, ORGID, ORGCODE, ORGNAME, REGIONCODE, PHONENUMBER, ELECTORNICUPLOAD, STATUS, COLLECTFRECUENCY, COLLECTDAYS, COLLECTTYPE, ADDDATE, PAUSEDATE, PAUSEREASON, CUSTOMERCODE, FEEDBACK, COMMENTS, CUSTOMERNAME, EMPLOYEENAME, CREATEDATE, DATELASTUPDATED, LASTMAKERUSERID, ORGCONTACT, ORGCONTACTPHONE, COLLECTDAYS2, INVENTORYUPLOAD, ORGRESPERSON, CMIRESPERSON, ORGADRESS, USERID, PHARMACEUTICAL, AREANAMEADD, AREAMANAGERADD)
values (orgdistributorseq.nextval, 106372779, 'HJ4694', '南京筑康医药有限公司', '320000', '1', 0, 1, 1, 1.00000, 1, null, null, null, null, null, null, null, '1', sysdate, sysdate, 1, null, null, 4.00000, 0, null, null, null, null, null, null, null);
</code></pre>
<h6 id="导总账和导入正式表没反应或者跳别的处理中心">导总账和导入正式表没反应或者跳别的处理中心</h6>
<pre><code>重新编译下导总账的存储,如果还不行重启服务
</code></pre>
<h6 id="网上报量上载和差异查询补量上载相关过程">网上报量上载和差异查询补量上载相关过程</h6>
<pre><code>select * from upload_salesdatafile where filename like '%H57691_温州一洲医药连锁有限公司_201908_ucb_补.xlsx%'

d:\uploads\backfiles\20190918\H57691\H57691_温州一洲医药连锁有限公司_201908_ucb_补.xlsx

select u.filename,s.filename,r.username,employeename,u.createdate,u.filepath
 from salesdatafile s,originalmapping g,upload_salesdatafile u,usr r  
where /*s.filename='SM_H316D7_唐山鼎诚医药有限责任公司_20121101_UP_1.csv'
and*/ s.filename=g.newfilename and u.filename='H57691_温州一洲医药连锁有限公司_201908_ucb_补.xlsx'
and u.salesdatafileid=g.oldid
and r.userid=u.maker

SM_H57691_温州一洲医药连锁有限公司_20190901_UP_SystemS_2.csv

select * from salesdatafile f where f.filename='SM_H57691_温州一洲医药连锁有限公司_20190901_UP_SystemS_2.csv'
select * from datafileactionlog d where datafiledetailid=113556643


</code></pre>
<h6 id="ucb导月份进销存合计数据">UCB导月份进销存合计数据</h6>
<p>1.创建临时表</p>
<pre><code>create table organdprodtmp4 as

  with aa as (
  select  hi.sellercode,hi.sellername,hi.prodname,hi.prodspec,sum(hi.qty) as 库存5 from historyofinventory hi where hi.invdate = to_date('2019-05-31','yyyy-MM-dd') and exists(select 1 from productgroupmap b where hi.prodid=b.productid and b.productgroupid=13)  and hi.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hi.sellercode and gt.yearmonth = '201905')
   group by hi.sellercode,hi.sellername,hi.prodname,hi.prodspec)
   ,
   bb as(
   select hp.sellercode,hp.sellername,hp.prodname,hp.prodspec,sum(hp.qty) as 采购5 from historyofpurchase hp where hp.purdate  &gt;= TO_DATE('2019-05','yyyy-mm') and hp.purdate &lt; ADD_MONTHS(TO_DATE('2019-05','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hp.prodid=b.productid and b.productgroupid=13)  and hp.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hp.sellercode and gt.yearmonth = '201905')
   group by hp.sellercode,hp.sellername,hp.prodname,hp.prodspec)
   ,
cc as (
select hs.sellercode,hs.sellername,hs.prodname,hs.prodspec,sum(hs.qty) as 销售5 from historyofsales hs where hs.salesdate &gt;= TO_DATE('2019-05','yyyy-mm') and hs.salesdate &lt; ADD_MONTHS(TO_DATE('2019-05','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hs.prodid=b.productid and b.productgroupid=13)  and hs.version is not null
and exists (select 1 from gatherplandetail gt where gt.dtcode = hs.sellercode and gt.yearmonth = '201905')
group by hs.sellercode,hs.sellername,hs.prodname,hs.prodspec)
   ,
   dd as (
  select  hi.sellercode,hi.sellername,hi.prodname,hi.prodspec,sum(hi.qty) as 库存6 from historyofinventory hi where hi.invdate = to_date('2019-06-30','yyyy-MM-dd') and exists(select 1 from productgroupmap b where hi.prodid=b.productid and b.productgroupid=13)  and hi.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hi.sellercode and gt.yearmonth = '201906')
   group by hi.sellercode,hi.sellername,hi.prodname,hi.prodspec)
 ,
   ee as(
   select hp.sellercode,hp.sellername,hp.prodname,hp.prodspec,sum(hp.qty) as 采购6 from historyofpurchase hp where hp.purdate  &gt;= TO_DATE('2019-06','yyyy-mm') and hp.purdate &lt; ADD_MONTHS(TO_DATE('2019-06','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hp.prodid=b.productid and b.productgroupid=13)  and hp.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hp.sellercode and gt.yearmonth = '201906')
   group by hp.sellercode,hp.sellername,hp.prodname,hp.prodspec)
   ,
ff as (
select hs.sellercode,hs.sellername,hs.prodname,hs.prodspec,sum(hs.qty) as 销售6 from historyofsales hs where hs.salesdate &gt;= TO_DATE('2019-06','yyyy-mm') and hs.salesdate &lt; ADD_MONTHS(TO_DATE('2019-06','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hs.prodid=b.productid and b.productgroupid=13)  and hs.version is not null
and exists (select 1 from gatherplandetail gt where gt.dtcode = hs.sellercode and gt.yearmonth = '201906')
group by hs.sellercode,hs.sellername,hs.prodname,hs.prodspec)
   ,
   gg as (
  select  hi.sellercode,hi.sellername,hi.prodname,hi.prodspec,sum(hi.qty) as 库存7 from historyofinventory hi where hi.invdate = to_date('2019-07-31','yyyy-MM-dd') and exists(select 1 from productgroupmap b where hi.prodid=b.productid and b.productgroupid=13)  and hi.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hi.sellercode and gt.yearmonth = '201907')
   group by hi.sellercode,hi.sellername,hi.prodname,hi.prodspec)
 ,
   hh as(
   select hp.sellercode,hp.sellername,hp.prodname,hp.prodspec,sum(hp.qty) as 采购7 from historyofpurchase hp where hp.purdate  &gt;= TO_DATE('2019-07','yyyy-mm') and hp.purdate &lt; ADD_MONTHS(TO_DATE('2019-07','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hp.prodid=b.productid and b.productgroupid=13)  and hp.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hp.sellercode and gt.yearmonth = '201907')
   group by hp.sellercode,hp.sellername,hp.prodname,hp.prodspec)
   ,
jj as (
select hs.sellercode,hs.sellername,hs.prodname,hs.prodspec,sum(hs.qty) as 销售7 from historyofsales hs where hs.salesdate &gt;= TO_DATE('2019-07','yyyy-mm') and hs.salesdate &lt; ADD_MONTHS(TO_DATE('2019-07','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hs.prodid=b.productid and b.productgroupid=13)  and hs.version is not null
and exists (select 1 from gatherplandetail gt where gt.dtcode = hs.sellercode and gt.yearmonth = '201907')
group by hs.sellercode,hs.sellername,hs.prodname,hs.prodspec)

   select aa.sellercode,aa.sellername,aa.prodname,aa.prodspec from aa 
   union  
   select bb.sellercode,bb.sellername,bb.prodname,bb.prodspec from bb
   union 
   select cc.sellercode,cc.sellername,cc.prodname,cc.prodspec from cc
   union
   select dd.sellercode,dd.sellername,dd.prodname,dd.prodspec from dd
   union 
   select ee.sellercode,ee.sellername,ee.prodname,ee.prodspec from ee
   union 
   select ff.sellercode,ff.sellername,ff.prodname,ff.prodspec from ff
   union 
   select gg.sellercode,gg.sellername,gg.prodname,gg.prodspec from gg
   union 
   select hh.sellercode,hh.sellername,hh.prodname,hh.prodspec from hh
   union 
   select jj.sellercode,jj.sellername,jj.prodname,jj.prodspec from jj
   
2.查出数据
  with aa as (
  select  hi.sellercode,hi.sellername,hi.prodname,hi.prodspec,sum(hi.qty) as 库存5 from historyofinventory hi where hi.invdate = to_date('2019-05-31','yyyy-MM-dd') and exists(select 1 from productgroupmap b where hi.prodid=b.productid and b.productgroupid=13)  and hi.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hi.sellercode and gt.yearmonth = '201905')
   group by hi.sellercode,hi.sellername,hi.prodname,hi.prodspec)
   ,
   bb as(
   select hp.sellercode,hp.sellername,hp.prodname,hp.prodspec,sum(hp.qty) as 采购5 from historyofpurchase hp where hp.purdate  &gt;= TO_DATE('2019-05','yyyy-mm') and hp.purdate &lt; ADD_MONTHS(TO_DATE('2019-05','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hp.prodid=b.productid and b.productgroupid=13)  and hp.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hp.sellercode and gt.yearmonth = '201905')
   group by hp.sellercode,hp.sellername,hp.prodname,hp.prodspec)
   ,
    cc as (
    select hs.sellercode,hs.sellername,hs.prodname,hs.prodspec,sum(hs.qty) as 销售5 from historyofsales hs where hs.salesdate &gt;= TO_DATE('2019-05','yyyy-mm') and hs.salesdate &lt; ADD_MONTHS(TO_DATE('2019-05','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hs.prodid=b.productid and b.productgroupid=13)  and hs.version is not null
    and exists (select 1 from gatherplandetail gt where gt.dtcode = hs.sellercode and gt.yearmonth = '201905')
    group by hs.sellercode,hs.sellername,hs.prodname,hs.prodspec)
   ,
   dd as (
  select  hi.sellercode,hi.sellername,hi.prodname,hi.prodspec,sum(hi.qty) as 库存6 from historyofinventory hi where hi.invdate = to_date('2019-06-30','yyyy-MM-dd') and exists(select 1 from productgroupmap b where hi.prodid=b.productid and b.productgroupid=13)  and hi.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hi.sellercode and gt.yearmonth = '201906')
   group by hi.sellercode,hi.sellername,hi.prodname,hi.prodspec)
     ,
   ee as(
   select hp.sellercode,hp.sellername,hp.prodname,hp.prodspec,sum(hp.qty) as 采购6 from historyofpurchase hp where hp.purdate  &gt;= TO_DATE('2019-06','yyyy-mm') and hp.purdate &lt; ADD_MONTHS(TO_DATE('2019-06','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hp.prodid=b.productid and b.productgroupid=13)  and hp.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hp.sellercode and gt.yearmonth = '201906')
   group by hp.sellercode,hp.sellername,hp.prodname,hp.prodspec)
   ,
    ff as (
    select hs.sellercode,hs.sellername,hs.prodname,hs.prodspec,sum(hs.qty) as 销售6 from historyofsales hs where hs.salesdate &gt;= TO_DATE('2019-06','yyyy-mm') and hs.salesdate &lt; ADD_MONTHS(TO_DATE('2019-06','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hs.prodid=b.productid and b.productgroupid=13)  and hs.version is not null
    and exists (select 1 from gatherplandetail gt where gt.dtcode = hs.sellercode and gt.yearmonth = '201906')
    group by hs.sellercode,hs.sellername,hs.prodname,hs.prodspec)
   ,
   gg as (
  select  hi.sellercode,hi.sellername,hi.prodname,hi.prodspec,sum(hi.qty) as 库存7 from historyofinventory hi where hi.invdate = to_date('2019-07-31','yyyy-MM-dd') and exists(select 1 from productgroupmap b where hi.prodid=b.productid and b.productgroupid=13)  and hi.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hi.sellercode and gt.yearmonth = '201907')
   group by hi.sellercode,hi.sellername,hi.prodname,hi.prodspec)
     ,
   hh as(
   select hp.sellercode,hp.sellername,hp.prodname,hp.prodspec,sum(hp.qty) as 采购7 from historyofpurchase hp where hp.purdate  &gt;= TO_DATE('2019-07','yyyy-mm') and hp.purdate &lt; ADD_MONTHS(TO_DATE('2019-07','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hp.prodid=b.productid and b.productgroupid=13)  and hp.version is not null
   and exists (select 1 from gatherplandetail gt where gt.dtcode = hp.sellercode and gt.yearmonth = '201907')
   group by hp.sellercode,hp.sellername,hp.prodname,hp.prodspec)
   ,
    jj as (
    select hs.sellercode,hs.sellername,hs.prodname,hs.prodspec,sum(hs.qty) as 销售7 from historyofsales hs where hs.salesdate &gt;= TO_DATE('2019-07','yyyy-mm') and hs.salesdate &lt; ADD_MONTHS(TO_DATE('2019-07','yyyy-mm'),1)  and exists(select 1 from productgroupmap b where hs.prodid=b.productid and b.productgroupid=13)  and hs.version is not null
    and exists (select 1 from gatherplandetail gt where gt.dtcode = hs.sellercode and gt.yearmonth = '201907')
    group by hs.sellercode,hs.sellername,hs.prodname,hs.prodspec)

select op.sellercode as 商业代码,op.sellername as 商业名称,op.prodname as 品名,op.prodspec as 规格,
aa.库存5,bb.采购5,cc.销售5,
dd.库存6,ee.采购6,ff.销售6,
gg.库存7,hh.采购7,jj.销售7
from organdprodtmp4 op
left join aa on aa.sellercode = op.sellercode and aa.sellername = op.sellername and aa.prodname = op.prodname and aa.prodspec = op.prodspec
left join bb on bb.sellercode = op.sellercode and bb.sellername = op.sellername and bb.prodname = op.prodname and bb.prodspec = op.prodspec
left join cc on cc.sellercode = op.sellercode and cc.sellername = op.sellername and cc.prodname = op.prodname and cc.prodspec = op.prodspec
left join dd on dd.sellercode = op.sellercode and dd.sellername = op.sellername and dd.prodname = op.prodname and dd.prodspec = op.prodspec
left join ee on dd.sellercode = op.sellercode and ee.sellername = op.sellername and ee.prodname = op.prodname and ee.prodspec = op.prodspec
left join ff on dd.sellercode = op.sellercode and ff.sellername = op.sellername and ff.prodname = op.prodname and ff.prodspec = op.prodspec
left join gg on dd.sellercode = op.sellercode and gg.sellername = op.sellername and gg.prodname = op.prodname and gg.prodspec = op.prodspec
left join hh on dd.sellercode = op.sellercode and hh.sellername = op.sellername and hh.prodname = op.prodname and hh.prodspec = op.prodspec
left join jj on dd.sellercode = op.sellercode and jj.sellername = op.sellername and jj.prodname = op.prodname and jj.prodspec = op.prodspec
</code></pre>
<h6 id="卸载页面点序号加载慢查看sql">卸载页面点序号加载慢,查看SQL</h6>
<pre><code>select x.*,
  y.generalnum,
  y.reportqty 

from (
select a.reffileid as reffileid,
  a.filename as filename,
  h.valuename as valuename,
  nvl(sum(b.realbaseqty),
  0) as realbaseqty,
  nvl(sum(c.qty),
  0)+nvl(sum(d.qty),
  0)+nvl(sum(e.qty),
  0)+nvl(sum(f.qty),
  0) as ledgernum,
  'CHC' as msd 

from dcchc.salesdatafile a,
  dcchc.originalsalesdata b,
  dcchc.historyofmonthsales c,
  dcchc.historyofsubmonthsales d,
  dcchc.historyofweeksales e,
  dcchc.historyofdaysales f,
  dictionary h 

where b.salesdatafileid(+)=a.salesdatafileid 
  and c.salesdatafileid(+)=a.salesdatafileid 
  and d.salesdatafileid(+)=a.salesdatafileid 
  and e.salesdatafileid(+)=a.salesdatafileid 
  and f.salesdatafileid(+)=a.salesdatafileid 
  and  a.filestatus=h.value  
  and h.languagecode = 'cn' 
  and h.type='Status' 
  and exists (
select 1  

from dcchc.datafile c,
    dcchc.datafiledetail b 

where c.datafileid=b.datafileid   
  and a.reffileid=b.datafiledetailid 
  and b.cahdatafiledetailid = 111938292) 

group by a.reffileid,
  a.filename,
  h.valuename ) x,
   (
select a.reffileid as reffileid,
  nvl(sum(g.qty),
  0) as generalnum,
  nvl(sum(case when g.version is null then 0 else g.qty end),
  0) as reportqty 

from  dcchc.salesdatafile a,
   dcchc.historyofsales g 

where g.salesdatafileid(+)=a.salesdatafileid 
  and exists ( 
select 1  

from dcchc.datafile c,
    dcchc.datafiledetail b  

where c.datafileid=b.datafileid   
  and a.reffileid=b.datafiledetailid 
  and b.cahdatafiledetailid = 111938292) 

group by a.reffileid) y 

where x.reffileid = y.reffileid   

</code></pre>
<h6 id="产品调整下发报错联系管理员">产品调整下发报错联系管理员</h6>
<p>查看表 UPPRODDISTRIBUTE 里的数据有无异常</p>
<h6 id="部分删除">部分删除</h6>
<p>页面查询用的是统一门户ID</p>
<p>批量删除ID放临时表historydelete</p>
<p>库存需要导入总账</p>
<pre><code>select count(1) as count  

from historydelete a,
historyofdayinventory h   
WHERE 1=1   
and a.userid=100009862   
and a.id=h.historyofdayinventoryid   
and h.isdelete='N' 
</code></pre>
<h6 id="抓日志工具失效">抓日志工具失效</h6>
<p>重启服务或者重启服务器</p>
<h6 id="差异查询申诉和市场调查和进销存不平衡-表">差异查询(申诉)和市场调查和进销存不平衡 表</h6>
<p>差异查询feedbacktrack</p>
<p>市场调查 marketsurvey</p>
<p>进销存不平衡 inventoryimbalancedata</p>
<h6 id="使用dblink插数据报ora-00904">使用DBLINK插数据报ORA-00904</h6>
<p>如果是目标表后添加字段可以在本地库使用刷新缓存方式(正式环境慎用)</p>
<p>ALTER SYSTEM FLUSH SHARED_POOL;</p>
<h6 id="销售行为配置表">销售行为配置表</h6>
<p>saletypeconfig</p>
<h6 id="经销商权限问题">经销商权限问题</h6>
<p>1.看organization里cmiresperson和employeecode为对应人</p>
<p>2.查看orgdistributor里是否有该经销商,如果没有就添加</p>
<h6 id="导分类账excel打开提示部分内容有问题">导分类账excel打开提示部分内容有问题</h6>
<p>把下载的文件改成RAR格式,然后打开里面的XML文件找到对应行数和对应列,一般是电子监管码或者地址那列出问题,根据ID去数据库修改spdacode,prodfactoryaddress为NULL.</p>
<p>update historyofdaysales hd set hd.spdacode = null where hd.salesdate&gt;=to_date('2020-05-01','yyyy-MM-dd')<br>
and hd.salesdate&lt;=to_date('2020-05-28','yyyy-MM-dd')<br>
and exists(select 1 from buproduct bp where bp.prodid = hd.prodid and bp.bucode = 'UCB_importation')<br>
and hd.sellerid = 101271545</p>
<p>select hd.historyofdaysalesid,hd.prodfactoryaddress,hd.receiptaddress,hd. spec1 from historyofdaysales hd where hd.salesdate&gt;=to_date('2020-06-01','yyyy-MM-dd') and hd.prodfactoryaddress = ' '</p>
<p>快速定位直接找怀疑字段长度是1的， length(hs.ordercode)=1</p>
<h6 id="dblink新添字段存储报错">DBLINK新添字段,存储报错</h6>
<p>在目标库执行：ALTER SYSTEM FLUSH SHARED_POOL;</p>
<p>修改目标表名称,然后再改回来</p>
<p>ALTER TABLE historyofsales RENAME TO historyofsales1</p>
<h6 id="跨省检查">跨省检查</h6>
<p>​    select dtcode,buyercode,a.oricustomername from skipregion_enable a where 1=2 for update;</p>
<h6 id="文件状态">文件状态</h6>
<p>​	10	Input	<br>
​	10	输入	<br>
​	11	File Name Rule Error	<br>
​	11	文件规则失败	<br>
​	12	File Name Check Error	<br>
​	12	文件名检查失败	<br>
​	13	File Name Backup Error	<br>
​	13	文件备份失败	<br>
​	20	Save Data Success	<br>
​	20	数据保存成功	<br>
​	21	数据保存失败	<br>
​	21	Save Data  Error	<br>
​	40	File Tag Delete	<br>
​	40	标记删除	<br>
​	50	Uninstall	<br>
​	50	卸载	<br>
​	79	文件名检查失败	File Name Check Error<br>
​	79	File Name Check Error	File Name Check Error<br>
​	100	&quot;HSR下发药厂成功&quot;	仅供HSR文件使用，下发界面看不到</p>
<p>​	100	&quot;HSR intofactory&quot;</p>
<p>​     19      清洗界面未执行（输入提交）</p>
<p>​	  60     执行中</p>
<h6 id="百特经销商级别">百特经销商级别</h6>
<p>表phfactlevel</p>
<h6 id="上载文件报500">上载文件报500</h6>
<p>查询文件中有没有公式，没有再重启服务。</p>
<h6 id="推送报ora-14450">推送报ORA-14450</h6>
<p>select SID,SERIAL# from V<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>w</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>e</mi><mi>S</mi><mi>I</mi><mi>D</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>s</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>s</mi><mi>i</mi><mi>d</mi><mi>f</mi><mi>r</mi><mi>o</mi><mi>m</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">session  where SID in (select sid from v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>enqueue_lock t where t.type='TO')<br>
alter system kill session '149,44993';</p>
<h6 id="文件上载对应字段配置">文件上载对应字段配置</h6>
<p>web-inf/config/ cfg/excelinterface.xml</p>
<h6 id="定时job执行配置">定时JOB执行配置</h6>
<p>web-inf/config/ cfg/scheduled.xml</p>
<h4 id="综合药厂门户">综合药厂门户</h4>
<pre><code>http://rep.pharm-hub.com.cn/oval/Main.jsp?threadxcnt=0.19015614094707778
fuqiaolian  luxon123

数据库：
172.20.57.232:1521:DCMS
dcph/Hp678cd
stgph/oval163
程序部署服务器：
172.21.0.19
administrator
[ddX@9X7

报表文件：
D:\CAH\cfg

销售：
D:\CAH\cfg\config\SalesOut

进销存模板
D:\CAH\cfg\Template

</code></pre>
<h6 id="综合药厂门户主要表">综合药厂门户主要表</h6>
<pre><code>系数表:umtransform
根据 商业代码 产品代码 原始规格 原始单位 查出数据更新,没有就新增.

stdreportlist 配置模板表
select * from bjtrtsellerlist --TRT1期经销商维护表
select * from bjtrtsellerlevel --TRT2期等级维护表
select * from trtstorglevel --TRTTE等级维护表   

</code></pre>
<h4 id="百特药厂门户">百特药厂门户</h4>
<pre><code>数据库信息:172.20.57.40:1521:dcms     btskprd/oval163
</code></pre>
<h4 id="web取数">Web取数</h4>
<h6 id="基本信息-3">基本信息</h6>
<ol>
<li>
<p>应用服务器地址，账号及密码</p>
<p>地址：54.223.83.26   账号及密码  luxondata/Luxon123</p>
</li>
<li>
<p>测试环境访问地址</p>
<p>XJP：http://localhost:8080/XJP350/</p>
</li>
</ol>
<p>​    cahWeb：http://localhost:8080/ncahweb</p>
<ol start="3">
<li>
<p>正式环境访问地址</p>
<p>XJP：http://54.223.83.26:21012/XJP350/</p>
<p>cahWeb：http://54.223.83.26:8080/cahweb/</p>
</li>
</ol>
<h4 id="dscn20">DSCN2.0</h4>
<p>远程服务器 IP：172.20.57.14</p>
<p>用户名：engineer</p>
<p>密码：xXSqfh8\</p>
<p>管理员: sankyoadmin/&lt;&lt;XYGZ34</p>
<p>查看端口号是否被占用  netstat  -aon|findstr  &quot;80&quot;</p>
<p>正式地址 http://210.51.21.107:8014/oval/ssologin/SSOLogin.jsp   admin asdf1234</p>
<p>测试地址 http://210.51.21.107:8015/oval/ssologin/SSOLogin.jsp   admin oval1234</p>
<p>​		http://172.20.57.14:8015/oval/ssologin/SSOLogin.jsp</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[WEB取数]]></title>
        <id>https://honlya.github.io/post/web-qu-shu/</id>
        <link href="https://honlya.github.io/post/web-qu-shu/">
        </link>
        <updated>2022-07-28T09:10:59.000Z</updated>
        <content type="html"><![CDATA[<p>1.setInvalidDate  有效期方法</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[统一门户问题处理]]></title>
        <id>https://honlya.github.io/post/tong-yi-men-hu-wen-ti-chu-li/</id>
        <link href="https://honlya.github.io/post/tong-yi-men-hu-wen-ti-chu-li/">
        </link>
        <updated>2022-07-28T02:14:09.000Z</updated>
        <content type="html"><![CDATA[<p>** 1.ORA-14450**</p>
<p>NED处理中心推送出现这个问题<br>
select 'alter system kill session '''||a.sid||','||a.SERIAL#||''';' from V<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>w</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>e</mi><mi>S</mi><mi>I</mi><mi>D</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>S</mi><mi>E</mi><mi>L</mi><mi>E</mi><mi>C</mi><mi>T</mi><mi>S</mi><mi>I</mi><mi>D</mi><mi>F</mi><mi>R</mi><mi>O</mi><mi>M</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">session a 
 where SID in (SELECT SID FROM v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>enqueue_lock t WHERE t.type='TO');------查出    查出来的语句复制执行<br>
后台推送  存储 importop_task  测试   填入id  reporttastdetailid<br>
** 2.动态SQL**</p>
<p>select bp.buname as BU,h.sellercode as 经销商代码,h.sellername as 经销商名称,h.originalcustname as 原始客户名称,h.buyercode as 客户代码,h.buyername as 客户名称,sysdate as &quot;导出时间（系统时间）&quot;,null as &quot;是否有曾用名（网站或官网）&quot;,null as 曾用名代码,null as 曾用名名称 from historyofsales h,organization o,buproduct bp where<br>
h.salesdate&gt;=to_date(v_parameter2,'yyyy-mm-dd') and h.salesdate&lt;=to_date(v_parameter3,'yyyy-mm-dd') and h.buyerid = o.orgid<br>
and o.createdate&gt;=to_date(v_parameter4,'yyyy-mm-dd HH24:mi:ss') and o.createdate&lt;=to_date(v_parameter5,'yyyy-mm-dd HH24:mi:ss')<br>
and h.prodid=bp.prodid and bp.bucode = 'v_parameter1'<br>
group by bp.buname,h.sellercode,h.sellername,h.originalcustname,h.buyercode,h.buyername</p>
<p>select bu.bucode as p_value,bu.buname as p_name from bumaster bu where bu.butype = 2 and bu.status = 41 and bu.parentbucode is not null and bu.datasource is not null and bu.datasource not in ('XJP','MSD','BLG','SGB')</p>
<p><strong>3.直连平台报错500</strong></p>
<p>​           select u.regioncode,u.regionname from ddiuser u group by u.regioncode,u.regionname having count(1)&gt;1</p>
<p>查找出重复的 删除<br>
<strong>4.同义词</strong></p>
<p>create or replace synonym gatherplandetail<br>
for gatherplandetail@link230_unportal;</p>
<h3 id="5报错ora-14450ned">5.报错ORA-14450(NED)</h3>
<p>第一步</p>
<p>select SID,SERIAL# from V<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>w</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>e</mi><mi>S</mi><mi>I</mi><mi>D</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>s</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>s</mi><mi>i</mi><mi>d</mi><mi>f</mi><mi>r</mi><mi>o</mi><mi>m</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">session where SID in (select sid from v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>enqueue_lock t where t.type='TO')<br>
alter system kill session '103,257';</p>
<p>第二步</p>
<p>importtophcp_task  存储   &quot;测试&quot;</p>
<p>select * from PUSHREPORTTASTDETAIL t where t.bucode = '196 ALK' order by t.datalastupdate desc--查询BU对应的ID,填到存储里测试</p>
<p>196 ALK是BU   需要上载的文件</p>
<h3 id="6创建job定时任务">6.创建JOB,定时任务</h3>
<p>declare</p>
<pre><code> job NUMBER;
</code></pre>
<p>begin<br>
sys.dbms_job.submit(job =&gt; job,<br>
what =&gt; 'PRC_UCBDTP_GYLK01;',<br>
next_date =&gt; to_date('28-12-2021 05:00:00', 'dd-mm-yyyy hh24:mi:ss'),<br>
interval =&gt; 'trunc(sysdate+1)+5/24');<br>
commit;<br>
end;</p>
<h3 id="7数据库服务器文件储存地址">7.数据库服务器文件储存地址</h3>
<p>create or replace directory  DIR_GZYY01_EXCEL  as '/u02/backup/UCBDTP';</p>
<h3 id="8上载审批处理人员出错删除">8.上载审批，处理人员出错，删除</h3>
<p>select * from feedbacktrack f where f.sellercode = '059208' order by f.createdate desc for update</p>
<h3 id="9-申诉上载错误">9. 申诉上载错误</h3>
<p>select * from feedbacktrack fd where fd.createdate =to_date( '2021/12/16 7:53:21','yyyy/mm/dd hh:mi:ss') order by fd.createdate desc for update</p>
<h3 id="10黑名单维护">10.黑名单维护</h3>
<p>select * from blacklist bl order by bl.createdate desc  --自检<br>
insert into blacklist (blacklistid ,bucode ,dtcode,dtname ,attr1 )<br>
select blacklistseq.nextval,bucode ,dtcode,dtname,'202112' from blacklist where attr1='201806'<br>
-- 如上12月黑名单</p>
<h3 id="11期间是否正常">11.期间是否正常</h3>
<p>select * from historyofsales hs where hs.POSTDATE&gt;=to_date('2021-02-01','yyyy-mm-dd')</p>
<h3 id="12月数据自补是否打开">12.月数据自补是否打开</h3>
<p>select optionvalue  from orgoption a where optionname='DDIFILE_SUPPLYMENT_PROJECT_TRTTE';</p>
<h3 id="13dtp药房直连数据自动拆分">13.DTP药房直连数据自动拆分</h3>
<p>select * from UCBORGMAPPING t for update</p>
<h3 id="14统一门户批量卸载文件">14.统一门户批量卸载文件</h3>
<p>--第一步<br>
drop table DEL1<br>
/<em>select * from purchasedatafile p where<br>
select * from inventorydatafile i where</em>/</p>
<p>--第二步<br>
select * from DEL1<br>
CREATE TABLE DEL1 AS<br>
select * from salesdatafile f where f.filename  in(<br>
'SD_H570AJ_温州九州通医药有限公司_20211020_DD_TRTTE_ALL自补_155.csv',<br>
'SD_H570AJ_温州九州通医药有限公司_20211013_DD_TRTTE_ALL自补_162.csv',<br>
'SD_H570AJ_温州九州通医药有限公司_20211015_DD_TRTTE_ALL自补_161.csv',<br>
'SD_H570AJ_温州九州通医药有限公司_20211022_DD_TRTTE_ALL自补_160.csv',<br>
'SD_H570AJ_温州九州通医药有限公司_20211112_DD_TRTTE_ALL自补_159.csv')</p>
<p>--第三步<br>
drop table DEL2<br>
CREATE TABLE DEL2 AS SELECT * FROM DATAFILEDETAIL D WHERE D.DATAFILEID IN(SELECT E.REFFILEID FROM DEL1 E);<br>
select * from DEL2</p>
<p>--第四步<br>
declare v_message varchar2(256);<br>
BEGIN<br>
FOR C1 IN(SELECT * FROM DEL2 D WHERE D.DATAFILEDETAILID&lt;&gt;100758687) LOOP<br>
begin<br>
call_dcfiledelete(v_message ,/*DATAFILEDETAILid */C1.DATAFILEDETAILID,/*userid */100005783,'CHC',172);</p>
<p>update originalsalesdata  set deleteflag = 'Y',<br>
reasondeletion=172,<br>
uninstallmaker=100005783,<br>
uninstalldate=sysdate where  datafiledetailid in (C1.CAHDATAFILEDETAILID) and deleteflag is null;</p>
<p>update datafiledetail set status=50  where datafiledetailid =C1.CAHDATAFILEDETAILID;</p>
<p>update salesdatafile a set a.filestatus=50 where reffileid in (C1.CAHDATAFILEDETAILID);<br>
commit;<br>
end;<br>
END LOOP;<br>
END ;</p>
<p>select * from usr u where u.userid = 100005783 --uninstallmaker对应userid</p>
<h3 id="15删除产品对照">15.删除产品对照</h3>
<p>delete from prodcollate p where p.prodcollateid in (<br>
101056448</p>
<p>)</p>
<h3 id="16对照删除">16.对照删除</h3>
<p>-- 临时表<br>
delete from org_temp<br>
--插入商业代码 orgcode<br>
select * from org_temp for update<br>
--查找临时表中数据数量是否与excel中一致<br>
select count(1) from org_temp<br>
--查找organization表，当临时表中code与之相同的 倒序查出<br>
select o.orgid,o.orgcode from organization o,org_temp ot where o.orgcode = ot.orgcode order by o.orgcode desc<br>
-- 查出orgid，通过客户代码查出dtid 同样方式</p>
<p>delete from orgnamecollatetemp --临时表<br>
--依次插入<br>
select om.dtid,om.orgname,om.orgid from orgnamecollatetemp om for update<br>
-- 查找确认<br>
select count(1) from orgnamecollate om where exists(select 1 from orgnamecollatetemp ot where ot.dtid = om.dtid and ot.orgname = om.orgname and ot.orgid = om.orgid)--3857</p>
<p>create table orgnamecollate0222del as select * from orgnamecollate om where exists(select 1 from orgnamecollatetemp ot where ot.dtid = om.dtid and ot.orgname = om.orgname and ot.orgid = om.orgid)</p>
<p>select count(1) from orgnamecollate0222del--3857<br>
delete from orgnamecollate om where exists(select 1 from orgnamecollate0222del om2 where om.orgnamecollateid = om2.orgnamecollateid)--3857</p>
<p>select * from orgnamecollate0222del</p>
<p>select count(1) from orgcodecollate oc where exists(select 1 from orgnamecollatetemp ot where ot.dtid = oc.dtid and ot.orgname = oc.orgcode and ot.orgid = oc.orgid)--3853<br>
create table orgcodecollate0222del as select * from orgcodecollate oc where exists(select 1 from orgnamecollatetemp ot where ot.dtid = oc.dtid and ot.orgname = oc.orgcode and ot.orgid = oc.orgid)--3853<br>
-- 删除<br>
delete from orgcodecollate oc where exists (select 1 from orgcodecollate0222del oc2 where oc2.orgcodecollateid = oc.orgcodecollateid)</p>
<p>select * from orgcodecollate0222del</p>
<h3 id="17pfm特例">17.PFM特例</h3>
<p>select * from customerspecialpfm</p>
<h3 id="18统一门户文件整体流程">18.统一门户文件整体流程</h3>
<p>--DDI原始文件表头</p>
<p>select * from historyofsales h where h.HISTORYOFSALESID = 447636561<br>
select * from ddidatafiledetail dd where  dd.filename like 'SD_KF5355_上海邻客道客大药房有限公司_20220515_DD_DQYY_All%'</p>
<p>--DDI原始文件明细  销售 SD<br>
select * from ddioriginalsalesdata ds where ds.datafiledetailid = 125083859 --3597288188 originalsalesdataid<br>
--DDI原始文件明细  库存 ID<br>
select * from ddioriginalinventorydata ds where ds.datafiledetailid = 124959696<br>
--DDI原始文件明细  采购 PD<br>
select * from DDIORIGINALINVENTORYDATA ds where ds.datafiledetailid = 124959696</p>
<p>select * from historyofinventory v where v.CHAORIID=122035054</p>
<p>--拆分后<br>
--是去了哪？原始流向表么？originalsalesdata？<br>
--拆分之前有别的操作么？<br>
--拆分之后是去了哪张表，整体结束到各个数据中心在操作？<br>
select * from datafiledetail dd where dd.filename like 'SD_KF5355_上海邻客道客大药房有限公司_20220515_DD_DQYY%'--for update<br>
select * from datafiledetail  where datafileid=122504677<br>
select * from originalinventorydata o where datafiledetailid = 122391781<br>
select * from originalsalesdata where datafiledetailid = 122496230<br>
select * from originalpurchasedata where originalpurchasedataid = 121533170<br>
select * from salesdatafile where rownum&lt;10 105227756 SD_HW6112_国药控股(乐山)川药医药有限公司_20200429_DD_DSCN_ALL_99.xlsx<br>
select * from originalsalesdata t  where t.salesdatafileid= 105227756</p>
<p>-- 查询文件 例如 销售<br>
select * from salesdatafile sa where sa.reffileid=115881514  --可根据filename查看<br>
select * from inventorydatafile ia where ia.filename like 'ID_002118_国药控股分销中心有限公司_20220505_DD_BIIB%'<br>
select * from datafileactionlog da where da.datafiledetailid=124959696 --文件状态 ：21失败  50卸载  10刚入</p>
<p>-- 不反写之前数据 状态10改为80<br>
--select * from orgcodecollate org where org.status=10<br>
update orgcodecollate org set org.status=80 where org.status=10</p>
<p>10  输入,</p>
<p>11  文件规则失败,</p>
<p>12  文件名检查失败,</p>
<p>13	文件备份失败,</p>
<p>20	数据保存成功,</p>
<p>21	数据保存失败,</p>
<p>40	标记删除,</p>
<p>50	卸载,</p>
<p>79	文件名检查失败,</p>
<p>100	HSR下发药厂成功</p>
<p>--第二步：<br>
-- datafiledetailid 121081945   --datafileid 121090005<br>
select * from datafiledetail  where filename like 'ID_HR1727_中山广药桂康医药有限公司_20220506_DD_SZXB_ALL%'  order by datafiledetailid  desc<br>
-- salesdatafileid 107209963<br>
select * from salesdatafile  where filename like '%SM_079104_江西南华医药有限公司_20220401_DD_SZXB_ALL自补%'<br>
select * from inventorydatafile where filename like '%ID_HK6719_老百姓大药房连锁股份有限公司_20220410_DD_SZXB%'<br>
select * from purchasedatafile where filename like '%PD_002826_国药集团西南医药有限公司_20210413_DD_BIIB_ALL%'</p>
<p>--第三步：<br>
--originalsalesdataid   就是流向表中的统一门户id<br>
select * from originalsalesdata where datafiledetailid =122164242  --文件明细id<br>
select * from originalsalesdata where salesdatafileid   =107571171  --文件流向id<br>
select * from originalsalesdata where originalsalesdataid =107570836  --统一门户id</p>
<p>select * from originalinventorydata a where a.inventorydatafileid = 100472935--122035054<br>
select o.expirydate from originalpurchasedata o where o.datafiledetailid =119342239  --文件明细id</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://honlya.github.io/post/hello-gridea/</id>
        <link href="https://honlya.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="https://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>